ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Sensor_Out.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Sensor_Out_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Sensor_Out_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Sensor_Out_Enable, %function
  25              	Sensor_Out_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\Sensor_Out.c"
   1:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Sensor_Out.c **** * File Name: Sensor_Out.c
   3:Generated_Source\PSoC5/Sensor_Out.c **** * Version 3.30
   4:Generated_Source\PSoC5/Sensor_Out.c **** *
   5:Generated_Source\PSoC5/Sensor_Out.c **** * Description:
   6:Generated_Source\PSoC5/Sensor_Out.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/Sensor_Out.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/Sensor_Out.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/Sensor_Out.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/Sensor_Out.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/Sensor_Out.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/Sensor_Out.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/Sensor_Out.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/Sensor_Out.c **** *
  15:Generated_Source\PSoC5/Sensor_Out.c **** * Note:
  16:Generated_Source\PSoC5/Sensor_Out.c **** *
  17:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************
  18:Generated_Source\PSoC5/Sensor_Out.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Sensor_Out.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Sensor_Out.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Sensor_Out.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Sensor_Out.c **** 
  24:Generated_Source\PSoC5/Sensor_Out.c **** #include "Sensor_Out.h"
  25:Generated_Source\PSoC5/Sensor_Out.c **** 
  26:Generated_Source\PSoC5/Sensor_Out.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/Sensor_Out.c **** #ifdef Sensor_Out_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/Sensor_Out.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/Sensor_Out.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* Sensor_Out_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 2


  31:Generated_Source\PSoC5/Sensor_Out.c **** 
  32:Generated_Source\PSoC5/Sensor_Out.c **** uint8 Sensor_Out_initVar = 0u;
  33:Generated_Source\PSoC5/Sensor_Out.c **** 
  34:Generated_Source\PSoC5/Sensor_Out.c **** 
  35:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/Sensor_Out.c **** * Function Name: Sensor_Out_Start
  37:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************
  38:Generated_Source\PSoC5/Sensor_Out.c **** *
  39:Generated_Source\PSoC5/Sensor_Out.c **** * Summary:
  40:Generated_Source\PSoC5/Sensor_Out.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/Sensor_Out.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/Sensor_Out.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/Sensor_Out.c **** *
  44:Generated_Source\PSoC5/Sensor_Out.c **** * Parameters:
  45:Generated_Source\PSoC5/Sensor_Out.c **** *  None
  46:Generated_Source\PSoC5/Sensor_Out.c **** *
  47:Generated_Source\PSoC5/Sensor_Out.c **** * Return:
  48:Generated_Source\PSoC5/Sensor_Out.c **** *  None
  49:Generated_Source\PSoC5/Sensor_Out.c **** *
  50:Generated_Source\PSoC5/Sensor_Out.c **** * Global variables:
  51:Generated_Source\PSoC5/Sensor_Out.c **** *  Sensor_Out_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/Sensor_Out.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/Sensor_Out.c **** *
  54:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/Sensor_Out.c **** void Sensor_Out_Start(void) 
  56:Generated_Source\PSoC5/Sensor_Out.c **** {
  57:Generated_Source\PSoC5/Sensor_Out.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/Sensor_Out.c ****     if(Sensor_Out_initVar == 0u)
  59:Generated_Source\PSoC5/Sensor_Out.c ****     {
  60:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_Init();
  61:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_initVar = 1u;
  62:Generated_Source\PSoC5/Sensor_Out.c ****     }
  63:Generated_Source\PSoC5/Sensor_Out.c ****     Sensor_Out_Enable();
  64:Generated_Source\PSoC5/Sensor_Out.c **** 
  65:Generated_Source\PSoC5/Sensor_Out.c **** }
  66:Generated_Source\PSoC5/Sensor_Out.c **** 
  67:Generated_Source\PSoC5/Sensor_Out.c **** 
  68:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/Sensor_Out.c **** * Function Name: Sensor_Out_Init
  70:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************
  71:Generated_Source\PSoC5/Sensor_Out.c **** *
  72:Generated_Source\PSoC5/Sensor_Out.c **** * Summary:
  73:Generated_Source\PSoC5/Sensor_Out.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/Sensor_Out.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/Sensor_Out.c **** *  Sensor_Out_Start().
  76:Generated_Source\PSoC5/Sensor_Out.c **** *
  77:Generated_Source\PSoC5/Sensor_Out.c **** * Parameters:
  78:Generated_Source\PSoC5/Sensor_Out.c **** *  None
  79:Generated_Source\PSoC5/Sensor_Out.c **** *
  80:Generated_Source\PSoC5/Sensor_Out.c **** * Return:
  81:Generated_Source\PSoC5/Sensor_Out.c **** *  None
  82:Generated_Source\PSoC5/Sensor_Out.c **** *
  83:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/Sensor_Out.c **** void Sensor_Out_Init(void) 
  85:Generated_Source\PSoC5/Sensor_Out.c **** {
  86:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UsingFixedFunction || Sensor_Out_UseControl)
  87:Generated_Source\PSoC5/Sensor_Out.c ****         uint8 ctrl;
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 3


  88:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction || Sensor_Out_UseControl) */
  89:Generated_Source\PSoC5/Sensor_Out.c **** 
  90:Generated_Source\PSoC5/Sensor_Out.c ****     #if(!Sensor_Out_UsingFixedFunction)
  91:Generated_Source\PSoC5/Sensor_Out.c ****         #if(Sensor_Out_UseStatus)
  92:Generated_Source\PSoC5/Sensor_Out.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/Sensor_Out.c ****             uint8 Sensor_Out_interruptState;
  94:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UseStatus) */
  95:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (!Sensor_Out_UsingFixedFunction) */
  96:Generated_Source\PSoC5/Sensor_Out.c **** 
  97:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UsingFixedFunction)
  98:Generated_Source\PSoC5/Sensor_Out.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_CONTROL |= Sensor_Out_CFG0_MODE;
 100:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_DeadBand2_4)
 101:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_CONTROL |= Sensor_Out_CFG0_DB;
 102:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_DeadBand2_4) */
 103:Generated_Source\PSoC5/Sensor_Out.c **** 
 104:Generated_Source\PSoC5/Sensor_Out.c ****         ctrl = Sensor_Out_CONTROL3 & ((uint8 )(~Sensor_Out_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_CONTROL3 = ctrl | Sensor_Out_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/Sensor_Out.c **** 
 107:Generated_Source\PSoC5/Sensor_Out.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_RT1 &= ((uint8)(~Sensor_Out_RT1_MASK));
 109:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_RT1 |= Sensor_Out_SYNC;
 110:Generated_Source\PSoC5/Sensor_Out.c **** 
 111:Generated_Source\PSoC5/Sensor_Out.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_RT1 &= ((uint8)(~Sensor_Out_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_RT1 |= Sensor_Out_SYNCDSI_EN;
 114:Generated_Source\PSoC5/Sensor_Out.c **** 
 115:Generated_Source\PSoC5/Sensor_Out.c ****     #elif (Sensor_Out_UseControl)
 116:Generated_Source\PSoC5/Sensor_Out.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/Sensor_Out.c ****         ctrl = Sensor_Out_CONTROL & ((uint8)(~Sensor_Out_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/Sensor_Out.c ****                 ((uint8)(~Sensor_Out_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_CONTROL = ctrl | Sensor_Out_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/Sensor_Out.c ****                                    Sensor_Out_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction) */
 122:Generated_Source\PSoC5/Sensor_Out.c **** 
 123:Generated_Source\PSoC5/Sensor_Out.c ****     #if (!Sensor_Out_UsingFixedFunction)
 124:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_Resolution == 8)
 125:Generated_Source\PSoC5/Sensor_Out.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_AUX_CONTROLDP0 |= (Sensor_Out_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/Sensor_Out.c ****         #else /* (Sensor_Out_Resolution == 16)*/
 128:Generated_Source\PSoC5/Sensor_Out.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_AUX_CONTROLDP0 |= (Sensor_Out_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_AUX_CONTROLDP1 |= (Sensor_Out_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_Resolution == 8) */
 132:Generated_Source\PSoC5/Sensor_Out.c **** 
 133:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_WriteCounter(Sensor_Out_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (!Sensor_Out_UsingFixedFunction) */
 135:Generated_Source\PSoC5/Sensor_Out.c **** 
 136:Generated_Source\PSoC5/Sensor_Out.c ****     Sensor_Out_WritePeriod(Sensor_Out_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/Sensor_Out.c **** 
 138:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_UseOneCompareMode)
 139:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_WriteCompare(Sensor_Out_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 141:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_WriteCompare1(Sensor_Out_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_WriteCompare2(Sensor_Out_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UseOneCompareMode) */
 144:Generated_Source\PSoC5/Sensor_Out.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 4


 145:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_KillModeMinTime)
 146:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_WriteKillTime(Sensor_Out_MinimumKillTime);
 147:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_KillModeMinTime) */
 148:Generated_Source\PSoC5/Sensor_Out.c **** 
 149:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_DeadBandUsed)
 150:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_WriteDeadTime(Sensor_Out_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_DeadBandUsed) */
 152:Generated_Source\PSoC5/Sensor_Out.c **** 
 153:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UseStatus || Sensor_Out_UsingFixedFunction)
 154:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_SetInterruptMode(Sensor_Out_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UseStatus || Sensor_Out_UsingFixedFunction) */
 156:Generated_Source\PSoC5/Sensor_Out.c **** 
 157:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UsingFixedFunction)
 158:Generated_Source\PSoC5/Sensor_Out.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_GLOBAL_ENABLE |= Sensor_Out_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/Sensor_Out.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_CONTROL2 |= Sensor_Out_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/Sensor_Out.c ****     #else
 163:Generated_Source\PSoC5/Sensor_Out.c ****         #if(Sensor_Out_UseStatus)
 164:Generated_Source\PSoC5/Sensor_Out.c **** 
 165:Generated_Source\PSoC5/Sensor_Out.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/Sensor_Out.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/Sensor_Out.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_STATUS_AUX_CTRL |= Sensor_Out_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/Sensor_Out.c **** 
 171:Generated_Source\PSoC5/Sensor_Out.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/Sensor_Out.c ****             CyExitCriticalSection(Sensor_Out_interruptState);
 173:Generated_Source\PSoC5/Sensor_Out.c **** 
 174:Generated_Source\PSoC5/Sensor_Out.c ****             /* Clear the FIFO to enable the Sensor_Out_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/Sensor_Out.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_ClearFIFO();
 177:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UseStatus) */
 178:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction) */
 179:Generated_Source\PSoC5/Sensor_Out.c **** }
 180:Generated_Source\PSoC5/Sensor_Out.c **** 
 181:Generated_Source\PSoC5/Sensor_Out.c **** 
 182:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/Sensor_Out.c **** * Function Name: Sensor_Out_Enable
 184:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************
 185:Generated_Source\PSoC5/Sensor_Out.c **** *
 186:Generated_Source\PSoC5/Sensor_Out.c **** * Summary:
 187:Generated_Source\PSoC5/Sensor_Out.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/Sensor_Out.c **** *
 189:Generated_Source\PSoC5/Sensor_Out.c **** * Parameters:
 190:Generated_Source\PSoC5/Sensor_Out.c **** *  None
 191:Generated_Source\PSoC5/Sensor_Out.c **** *
 192:Generated_Source\PSoC5/Sensor_Out.c **** * Return:
 193:Generated_Source\PSoC5/Sensor_Out.c **** *  None
 194:Generated_Source\PSoC5/Sensor_Out.c **** *
 195:Generated_Source\PSoC5/Sensor_Out.c **** * Side Effects:
 196:Generated_Source\PSoC5/Sensor_Out.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/Sensor_Out.c **** *
 198:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/Sensor_Out.c **** void Sensor_Out_Enable(void) 
 200:Generated_Source\PSoC5/Sensor_Out.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/Sensor_Out.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UsingFixedFunction)
 203:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_GLOBAL_ENABLE |= Sensor_Out_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_GLOBAL_STBY_ENABLE |= Sensor_Out_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction) */
 206:Generated_Source\PSoC5/Sensor_Out.c **** 
 207:Generated_Source\PSoC5/Sensor_Out.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UseControl || Sensor_Out_UsingFixedFunction)
 209:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_CONTROL |= Sensor_Out_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7A640040 		.word	1073767546
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	Sensor_Out_Enable, .-Sensor_Out_Enable
  46              		.section	.text.Sensor_Out_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Sensor_Out_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Sensor_Out_Stop, %function
  52              	Sensor_Out_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UseControl || Sensor_Out_UsingFixedFunction) */
 211:Generated_Source\PSoC5/Sensor_Out.c **** }
 212:Generated_Source\PSoC5/Sensor_Out.c **** 
 213:Generated_Source\PSoC5/Sensor_Out.c **** 
 214:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/Sensor_Out.c **** * Function Name: Sensor_Out_Stop
 216:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************
 217:Generated_Source\PSoC5/Sensor_Out.c **** *
 218:Generated_Source\PSoC5/Sensor_Out.c **** * Summary:
 219:Generated_Source\PSoC5/Sensor_Out.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/Sensor_Out.c **** *  interrupts.
 221:Generated_Source\PSoC5/Sensor_Out.c **** *
 222:Generated_Source\PSoC5/Sensor_Out.c **** * Parameters:
 223:Generated_Source\PSoC5/Sensor_Out.c **** *  None
 224:Generated_Source\PSoC5/Sensor_Out.c **** *
 225:Generated_Source\PSoC5/Sensor_Out.c **** * Return:
 226:Generated_Source\PSoC5/Sensor_Out.c **** *  None
 227:Generated_Source\PSoC5/Sensor_Out.c **** *
 228:Generated_Source\PSoC5/Sensor_Out.c **** * Side Effects:
 229:Generated_Source\PSoC5/Sensor_Out.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/Sensor_Out.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/Sensor_Out.c **** *
 232:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************/
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 6


 233:Generated_Source\PSoC5/Sensor_Out.c **** void Sensor_Out_Stop(void) 
 234:Generated_Source\PSoC5/Sensor_Out.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UseControl || Sensor_Out_UsingFixedFunction)
 236:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_CONTROL &= ((uint8)(~Sensor_Out_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7A640040 		.word	1073767546
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Sensor_Out_Stop, .-Sensor_Out_Stop
  72              		.section	.text.Sensor_Out_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	Sensor_Out_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	Sensor_Out_WriteCounter, %function
  78              	Sensor_Out_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UseControl || Sensor_Out_UsingFixedFunction) */
 238:Generated_Source\PSoC5/Sensor_Out.c **** 
 239:Generated_Source\PSoC5/Sensor_Out.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UsingFixedFunction)
 241:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_GLOBAL_ENABLE &= ((uint8)(~Sensor_Out_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_GLOBAL_STBY_ENABLE &= ((uint8)(~Sensor_Out_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction) */
 244:Generated_Source\PSoC5/Sensor_Out.c **** }
 245:Generated_Source\PSoC5/Sensor_Out.c **** 
 246:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_UseOneCompareMode)
 247:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_CompareMode1SW)
 248:Generated_Source\PSoC5/Sensor_Out.c **** 
 249:Generated_Source\PSoC5/Sensor_Out.c **** 
 250:Generated_Source\PSoC5/Sensor_Out.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/Sensor_Out.c ****         * Function Name: Sensor_Out_SetCompareMode
 252:Generated_Source\PSoC5/Sensor_Out.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/Sensor_Out.c ****         *
 254:Generated_Source\PSoC5/Sensor_Out.c ****         * Summary:
 255:Generated_Source\PSoC5/Sensor_Out.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/Sensor_Out.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/Sensor_Out.c ****         *
 258:Generated_Source\PSoC5/Sensor_Out.c ****         * Parameters:
 259:Generated_Source\PSoC5/Sensor_Out.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/Sensor_Out.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/Sensor_Out.c ****         *
 262:Generated_Source\PSoC5/Sensor_Out.c ****         * Return:
 263:Generated_Source\PSoC5/Sensor_Out.c ****         *  None
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 7


 264:Generated_Source\PSoC5/Sensor_Out.c ****         *
 265:Generated_Source\PSoC5/Sensor_Out.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/Sensor_Out.c ****         void Sensor_Out_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/Sensor_Out.c ****         {
 268:Generated_Source\PSoC5/Sensor_Out.c ****             #if(Sensor_Out_UsingFixedFunction)
 269:Generated_Source\PSoC5/Sensor_Out.c **** 
 270:Generated_Source\PSoC5/Sensor_Out.c ****                 #if(0 != Sensor_Out_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/Sensor_Out.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Sensor_Out_CTRL_CMPMOD
 272:Generated_Source\PSoC5/Sensor_Out.c ****                 #else
 273:Generated_Source\PSoC5/Sensor_Out.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/Sensor_Out.c ****                 #endif /* (0 != Sensor_Out_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/Sensor_Out.c **** 
 276:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_CONTROL3 &= ((uint8)(~Sensor_Out_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/Sensor_Out.c **** 
 279:Generated_Source\PSoC5/Sensor_Out.c ****             #elif (Sensor_Out_UseControl)
 280:Generated_Source\PSoC5/Sensor_Out.c **** 
 281:Generated_Source\PSoC5/Sensor_Out.c ****                 #if(0 != Sensor_Out_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/Sensor_Out.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Sensor_Out_CTRL_CMPMO
 283:Generated_Source\PSoC5/Sensor_Out.c ****                                                 Sensor_Out_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/Sensor_Out.c ****                 #else
 285:Generated_Source\PSoC5/Sensor_Out.c ****                     uint8 comparemode1masked = comparemode & Sensor_Out_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/Sensor_Out.c ****                 #endif /* (0 != Sensor_Out_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/Sensor_Out.c **** 
 288:Generated_Source\PSoC5/Sensor_Out.c ****                 #if(0 != Sensor_Out_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/Sensor_Out.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Sensor_Out_CTRL_CMPMO
 290:Generated_Source\PSoC5/Sensor_Out.c ****                                                Sensor_Out_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/Sensor_Out.c ****                 #else
 292:Generated_Source\PSoC5/Sensor_Out.c ****                     uint8 comparemode2masked = comparemode & Sensor_Out_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/Sensor_Out.c ****                 #endif /* (0 != Sensor_Out_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/Sensor_Out.c **** 
 295:Generated_Source\PSoC5/Sensor_Out.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_CONTROL &= ((uint8)(~(Sensor_Out_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/Sensor_Out.c ****                                             Sensor_Out_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/Sensor_Out.c **** 
 300:Generated_Source\PSoC5/Sensor_Out.c ****             #else
 301:Generated_Source\PSoC5/Sensor_Out.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/Sensor_Out.c ****             #endif /* (Sensor_Out_UsingFixedFunction) */
 303:Generated_Source\PSoC5/Sensor_Out.c ****         }
 304:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* Sensor_Out_CompareMode1SW */
 305:Generated_Source\PSoC5/Sensor_Out.c **** 
 306:Generated_Source\PSoC5/Sensor_Out.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/Sensor_Out.c **** 
 308:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_CompareMode1SW)
 309:Generated_Source\PSoC5/Sensor_Out.c **** 
 310:Generated_Source\PSoC5/Sensor_Out.c **** 
 311:Generated_Source\PSoC5/Sensor_Out.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/Sensor_Out.c ****         * Function Name: Sensor_Out_SetCompareMode1
 313:Generated_Source\PSoC5/Sensor_Out.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/Sensor_Out.c ****         *
 315:Generated_Source\PSoC5/Sensor_Out.c ****         * Summary:
 316:Generated_Source\PSoC5/Sensor_Out.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/Sensor_Out.c ****         *
 318:Generated_Source\PSoC5/Sensor_Out.c ****         * Parameters:
 319:Generated_Source\PSoC5/Sensor_Out.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/Sensor_Out.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 8


 321:Generated_Source\PSoC5/Sensor_Out.c ****         *
 322:Generated_Source\PSoC5/Sensor_Out.c ****         * Return:
 323:Generated_Source\PSoC5/Sensor_Out.c ****         *  None
 324:Generated_Source\PSoC5/Sensor_Out.c ****         *
 325:Generated_Source\PSoC5/Sensor_Out.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/Sensor_Out.c ****         void Sensor_Out_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/Sensor_Out.c ****         {
 328:Generated_Source\PSoC5/Sensor_Out.c ****             #if(0 != Sensor_Out_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/Sensor_Out.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Sensor_Out_CTRL_CMPMODE1_S
 330:Generated_Source\PSoC5/Sensor_Out.c ****                                            Sensor_Out_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/Sensor_Out.c ****             #else
 332:Generated_Source\PSoC5/Sensor_Out.c ****                 uint8 comparemodemasked = comparemode & Sensor_Out_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/Sensor_Out.c ****             #endif /* (0 != Sensor_Out_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/Sensor_Out.c **** 
 335:Generated_Source\PSoC5/Sensor_Out.c ****             #if (Sensor_Out_UseControl)
 336:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_CONTROL &= ((uint8)(~Sensor_Out_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/Sensor_Out.c ****             #endif /* (Sensor_Out_UseControl) */
 339:Generated_Source\PSoC5/Sensor_Out.c ****         }
 340:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* Sensor_Out_CompareMode1SW */
 341:Generated_Source\PSoC5/Sensor_Out.c **** 
 342:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_CompareMode2SW)
 343:Generated_Source\PSoC5/Sensor_Out.c **** 
 344:Generated_Source\PSoC5/Sensor_Out.c **** 
 345:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_SetCompareMode2
 347:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/Sensor_Out.c ****     *
 349:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 350:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/Sensor_Out.c ****     *
 352:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 353:Generated_Source\PSoC5/Sensor_Out.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/Sensor_Out.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/Sensor_Out.c ****     *
 356:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 357:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 358:Generated_Source\PSoC5/Sensor_Out.c ****     *
 359:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/Sensor_Out.c ****     {
 362:Generated_Source\PSoC5/Sensor_Out.c **** 
 363:Generated_Source\PSoC5/Sensor_Out.c ****         #if(0 != Sensor_Out_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/Sensor_Out.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Sensor_Out_CTRL_CMPMODE2_SHIFT
 365:Generated_Source\PSoC5/Sensor_Out.c ****                                                  Sensor_Out_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 367:Generated_Source\PSoC5/Sensor_Out.c ****             uint8 comparemodemasked = comparemode & Sensor_Out_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (0 != Sensor_Out_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/Sensor_Out.c **** 
 370:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_UseControl)
 371:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_CONTROL &= ((uint8)(~Sensor_Out_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UseControl) */
 374:Generated_Source\PSoC5/Sensor_Out.c ****     }
 375:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /*Sensor_Out_CompareMode2SW */
 376:Generated_Source\PSoC5/Sensor_Out.c **** 
 377:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 9


 378:Generated_Source\PSoC5/Sensor_Out.c **** 
 379:Generated_Source\PSoC5/Sensor_Out.c **** 
 380:Generated_Source\PSoC5/Sensor_Out.c **** #if (!Sensor_Out_UsingFixedFunction)
 381:Generated_Source\PSoC5/Sensor_Out.c **** 
 382:Generated_Source\PSoC5/Sensor_Out.c **** 
 383:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_WriteCounter
 385:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/Sensor_Out.c ****     *
 387:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 388:Generated_Source\PSoC5/Sensor_Out.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/Sensor_Out.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/Sensor_Out.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/Sensor_Out.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/Sensor_Out.c ****     *
 393:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 394:Generated_Source\PSoC5/Sensor_Out.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/Sensor_Out.c ****     *
 396:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 397:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 398:Generated_Source\PSoC5/Sensor_Out.c ****     *
 399:Generated_Source\PSoC5/Sensor_Out.c ****     * Side Effects:
 400:Generated_Source\PSoC5/Sensor_Out.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/Sensor_Out.c ****     *
 402:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/Sensor_Out.c ****                                        
 405:Generated_Source\PSoC5/Sensor_Out.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/Sensor_Out.c ****         CY_SET_REG8(Sensor_Out_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 0D640040 		.word	1073767437
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Sensor_Out_WriteCounter, .-Sensor_Out_WriteCounter
  97              		.section	.text.Sensor_Out_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	Sensor_Out_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	Sensor_Out_ReadCounter, %function
 103              	Sensor_Out_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/Sensor_Out.c ****     }
 408:Generated_Source\PSoC5/Sensor_Out.c **** 
 409:Generated_Source\PSoC5/Sensor_Out.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 10


 410:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadCounter
 412:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/Sensor_Out.c ****     *
 414:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 415:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/Sensor_Out.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/Sensor_Out.c ****     *
 418:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 419:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 420:Generated_Source\PSoC5/Sensor_Out.c ****     *
 421:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 422:Generated_Source\PSoC5/Sensor_Out.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/Sensor_Out.c ****     *
 424:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadCounter(void) 
 426:Generated_Source\PSoC5/Sensor_Out.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/Sensor_Out.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/Sensor_Out.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/Sensor_Out.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/Sensor_Out.c ****           (void)CY_GET_REG8(Sensor_Out_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/Sensor_Out.c **** 
 432:Generated_Source\PSoC5/Sensor_Out.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/Sensor_Out.c ****         return (CY_GET_REG8(Sensor_Out_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/Sensor_Out.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 1D640040 		.word	1073767453
 122 0010 5D640040 		.word	1073767517
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	Sensor_Out_ReadCounter, .-Sensor_Out_ReadCounter
 126              		.section	.text.Sensor_Out_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	Sensor_Out_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	Sensor_Out_WritePeriod, %function
 132              	Sensor_Out_WritePeriod:
 133              	.LFB7:
 435:Generated_Source\PSoC5/Sensor_Out.c **** 
 436:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UseStatus)
 437:Generated_Source\PSoC5/Sensor_Out.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 11


 438:Generated_Source\PSoC5/Sensor_Out.c **** 
 439:Generated_Source\PSoC5/Sensor_Out.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/Sensor_Out.c ****         * Function Name: Sensor_Out_ClearFIFO
 441:Generated_Source\PSoC5/Sensor_Out.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/Sensor_Out.c ****         *
 443:Generated_Source\PSoC5/Sensor_Out.c ****         * Summary:
 444:Generated_Source\PSoC5/Sensor_Out.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/Sensor_Out.c ****         *
 446:Generated_Source\PSoC5/Sensor_Out.c ****         * Parameters:
 447:Generated_Source\PSoC5/Sensor_Out.c ****         *  None
 448:Generated_Source\PSoC5/Sensor_Out.c ****         *
 449:Generated_Source\PSoC5/Sensor_Out.c ****         * Return:
 450:Generated_Source\PSoC5/Sensor_Out.c ****         *  None
 451:Generated_Source\PSoC5/Sensor_Out.c ****         *
 452:Generated_Source\PSoC5/Sensor_Out.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/Sensor_Out.c ****         void Sensor_Out_ClearFIFO(void) 
 454:Generated_Source\PSoC5/Sensor_Out.c ****         {
 455:Generated_Source\PSoC5/Sensor_Out.c ****             while(0u != (Sensor_Out_ReadStatusRegister() & Sensor_Out_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/Sensor_Out.c ****             {
 457:Generated_Source\PSoC5/Sensor_Out.c ****                 (void)Sensor_Out_ReadCapture();
 458:Generated_Source\PSoC5/Sensor_Out.c ****             }
 459:Generated_Source\PSoC5/Sensor_Out.c ****         }
 460:Generated_Source\PSoC5/Sensor_Out.c **** 
 461:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* Sensor_Out_UseStatus */
 462:Generated_Source\PSoC5/Sensor_Out.c **** 
 463:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* !Sensor_Out_UsingFixedFunction */
 464:Generated_Source\PSoC5/Sensor_Out.c **** 
 465:Generated_Source\PSoC5/Sensor_Out.c **** 
 466:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Sensor_Out.c **** * Function Name: Sensor_Out_WritePeriod
 468:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Sensor_Out.c **** *
 470:Generated_Source\PSoC5/Sensor_Out.c **** * Summary:
 471:Generated_Source\PSoC5/Sensor_Out.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/Sensor_Out.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/Sensor_Out.c **** *
 474:Generated_Source\PSoC5/Sensor_Out.c **** * Parameters:
 475:Generated_Source\PSoC5/Sensor_Out.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/Sensor_Out.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/Sensor_Out.c **** *
 478:Generated_Source\PSoC5/Sensor_Out.c **** * Return:
 479:Generated_Source\PSoC5/Sensor_Out.c **** *  None
 480:Generated_Source\PSoC5/Sensor_Out.c **** *
 481:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/Sensor_Out.c **** void Sensor_Out_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/Sensor_Out.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/Sensor_Out.c ****     #if(Sensor_Out_UsingFixedFunction)
 485:Generated_Source\PSoC5/Sensor_Out.c ****         CY_SET_REG16(Sensor_Out_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/Sensor_Out.c ****     #else
 487:Generated_Source\PSoC5/Sensor_Out.c ****         CY_SET_REG8(Sensor_Out_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 4D640040 		.word	1073767501
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	Sensor_Out_WritePeriod, .-Sensor_Out_WritePeriod
 151              		.section	.text.Sensor_Out_WriteCompare1,"ax",%progbits
 152              		.align	2
 153              		.global	Sensor_Out_WriteCompare1
 154              		.thumb
 155              		.thumb_func
 156              		.type	Sensor_Out_WriteCompare1, %function
 157              	Sensor_Out_WriteCompare1:
 158              	.LFB8:
 488:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction) */
 489:Generated_Source\PSoC5/Sensor_Out.c **** }
 490:Generated_Source\PSoC5/Sensor_Out.c **** 
 491:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_UseOneCompareMode)
 492:Generated_Source\PSoC5/Sensor_Out.c **** 
 493:Generated_Source\PSoC5/Sensor_Out.c **** 
 494:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_WriteCompare
 496:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/Sensor_Out.c ****     *
 498:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 499:Generated_Source\PSoC5/Sensor_Out.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/Sensor_Out.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/Sensor_Out.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/Sensor_Out.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/Sensor_Out.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/Sensor_Out.c ****     *
 505:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 506:Generated_Source\PSoC5/Sensor_Out.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/Sensor_Out.c ****     *
 508:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 509:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 510:Generated_Source\PSoC5/Sensor_Out.c ****     *
 511:Generated_Source\PSoC5/Sensor_Out.c ****     * Side Effects:
 512:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/Sensor_Out.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/Sensor_Out.c ****     *
 515:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/Sensor_Out.c ****                                        
 518:Generated_Source\PSoC5/Sensor_Out.c ****     {
 519:Generated_Source\PSoC5/Sensor_Out.c ****         #if(Sensor_Out_UsingFixedFunction)
 520:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG16(Sensor_Out_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 522:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG8(Sensor_Out_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UsingFixedFunction) */
 524:Generated_Source\PSoC5/Sensor_Out.c **** 
 525:Generated_Source\PSoC5/Sensor_Out.c ****         #if (Sensor_Out_PWMMode == Sensor_Out__B_PWM__DITHER)
 526:Generated_Source\PSoC5/Sensor_Out.c ****             #if(Sensor_Out_UsingFixedFunction)
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 13


 527:Generated_Source\PSoC5/Sensor_Out.c ****                 CY_SET_REG16(Sensor_Out_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/Sensor_Out.c ****             #else
 529:Generated_Source\PSoC5/Sensor_Out.c ****                 CY_SET_REG8(Sensor_Out_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/Sensor_Out.c ****             #endif /* (Sensor_Out_UsingFixedFunction) */
 531:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_PWMMode == Sensor_Out__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/Sensor_Out.c ****     }
 533:Generated_Source\PSoC5/Sensor_Out.c **** 
 534:Generated_Source\PSoC5/Sensor_Out.c **** 
 535:Generated_Source\PSoC5/Sensor_Out.c **** #else
 536:Generated_Source\PSoC5/Sensor_Out.c **** 
 537:Generated_Source\PSoC5/Sensor_Out.c **** 
 538:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_WriteCompare1
 540:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/Sensor_Out.c ****     *
 542:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 543:Generated_Source\PSoC5/Sensor_Out.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/Sensor_Out.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/Sensor_Out.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/Sensor_Out.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/Sensor_Out.c ****     *
 548:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 549:Generated_Source\PSoC5/Sensor_Out.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/Sensor_Out.c ****     *
 551:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 552:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 553:Generated_Source\PSoC5/Sensor_Out.c ****     *
 554:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/Sensor_Out.c ****                                         
 557:Generated_Source\PSoC5/Sensor_Out.c ****     {
 159              		.loc 1 557 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 558:Generated_Source\PSoC5/Sensor_Out.c ****         #if(Sensor_Out_UsingFixedFunction)
 559:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG16(Sensor_Out_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 561:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG8(Sensor_Out_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 561 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 2D640040 		.word	1073767469
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	Sensor_Out_WriteCompare1, .-Sensor_Out_WriteCompare1
 176              		.section	.text.Sensor_Out_WriteCompare2,"ax",%progbits
 177              		.align	2
 178              		.global	Sensor_Out_WriteCompare2
 179              		.thumb
 180              		.thumb_func
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 14


 181              		.type	Sensor_Out_WriteCompare2, %function
 182              	Sensor_Out_WriteCompare2:
 183              	.LFB9:
 562:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UsingFixedFunction) */
 563:Generated_Source\PSoC5/Sensor_Out.c ****     }
 564:Generated_Source\PSoC5/Sensor_Out.c **** 
 565:Generated_Source\PSoC5/Sensor_Out.c **** 
 566:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_WriteCompare2
 568:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/Sensor_Out.c ****     *
 570:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 571:Generated_Source\PSoC5/Sensor_Out.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/Sensor_Out.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/Sensor_Out.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/Sensor_Out.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/Sensor_Out.c ****     *  mode.
 576:Generated_Source\PSoC5/Sensor_Out.c ****     *
 577:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 578:Generated_Source\PSoC5/Sensor_Out.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/Sensor_Out.c ****     *
 580:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 581:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 582:Generated_Source\PSoC5/Sensor_Out.c ****     *
 583:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/Sensor_Out.c ****                                         
 586:Generated_Source\PSoC5/Sensor_Out.c ****     {
 184              		.loc 1 586 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 587:Generated_Source\PSoC5/Sensor_Out.c ****         #if(Sensor_Out_UsingFixedFunction)
 588:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG16(Sensor_Out_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 590:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG8(Sensor_Out_COMPARE2_LSB_PTR, compare);
 190              		.loc 1 590 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 3D640040 		.word	1073767485
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	Sensor_Out_WriteCompare2, .-Sensor_Out_WriteCompare2
 201              		.section	.text.Sensor_Out_SetInterruptMode,"ax",%progbits
 202              		.align	2
 203              		.global	Sensor_Out_SetInterruptMode
 204              		.thumb
 205              		.thumb_func
 206              		.type	Sensor_Out_SetInterruptMode, %function
 207              	Sensor_Out_SetInterruptMode:
 208              	.LFB10:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 15


 591:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UsingFixedFunction) */
 592:Generated_Source\PSoC5/Sensor_Out.c ****     }
 593:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/Sensor_Out.c **** 
 595:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_DeadBandUsed)
 596:Generated_Source\PSoC5/Sensor_Out.c **** 
 597:Generated_Source\PSoC5/Sensor_Out.c **** 
 598:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_WriteDeadTime
 600:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/Sensor_Out.c ****     *
 602:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 603:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/Sensor_Out.c ****     *
 605:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 606:Generated_Source\PSoC5/Sensor_Out.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/Sensor_Out.c ****     *
 608:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 609:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 610:Generated_Source\PSoC5/Sensor_Out.c ****     *
 611:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/Sensor_Out.c ****     {
 614:Generated_Source\PSoC5/Sensor_Out.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/Sensor_Out.c ****         #if(!Sensor_Out_DeadBand2_4)
 616:Generated_Source\PSoC5/Sensor_Out.c ****             CY_SET_REG8(Sensor_Out_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 618:Generated_Source\PSoC5/Sensor_Out.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/Sensor_Out.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_DEADBAND_COUNT &= ((uint8)(~Sensor_Out_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/Sensor_Out.c **** 
 622:Generated_Source\PSoC5/Sensor_Out.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/Sensor_Out.c ****             #if(Sensor_Out_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Sensor_Out_DEADBAND_COUNT_
 625:Generated_Source\PSoC5/Sensor_Out.c ****                                                     Sensor_Out_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/Sensor_Out.c ****             #else
 627:Generated_Source\PSoC5/Sensor_Out.c ****                 Sensor_Out_DEADBAND_COUNT |= deadtime & Sensor_Out_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/Sensor_Out.c ****             #endif /* (Sensor_Out_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/Sensor_Out.c **** 
 630:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (!Sensor_Out_DeadBand2_4) */
 631:Generated_Source\PSoC5/Sensor_Out.c ****     }
 632:Generated_Source\PSoC5/Sensor_Out.c **** 
 633:Generated_Source\PSoC5/Sensor_Out.c **** 
 634:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadDeadTime
 636:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/Sensor_Out.c ****     *
 638:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 639:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/Sensor_Out.c ****     *
 641:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 642:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 643:Generated_Source\PSoC5/Sensor_Out.c ****     *
 644:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 645:Generated_Source\PSoC5/Sensor_Out.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/Sensor_Out.c ****     *
 647:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 16


 648:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/Sensor_Out.c ****     {
 650:Generated_Source\PSoC5/Sensor_Out.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/Sensor_Out.c ****         #if(!Sensor_Out_DeadBand2_4)
 652:Generated_Source\PSoC5/Sensor_Out.c ****             return (CY_GET_REG8(Sensor_Out_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 654:Generated_Source\PSoC5/Sensor_Out.c **** 
 655:Generated_Source\PSoC5/Sensor_Out.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/Sensor_Out.c ****             #if(Sensor_Out_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/Sensor_Out.c ****                 return ((uint8)(((uint8)(Sensor_Out_DEADBAND_COUNT & Sensor_Out_DEADBAND_COUNT_MASK
 658:Generated_Source\PSoC5/Sensor_Out.c ****                                                                            Sensor_Out_DEADBAND_COUN
 659:Generated_Source\PSoC5/Sensor_Out.c ****             #else
 660:Generated_Source\PSoC5/Sensor_Out.c ****                 return (Sensor_Out_DEADBAND_COUNT & Sensor_Out_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/Sensor_Out.c ****             #endif /* (Sensor_Out_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (!Sensor_Out_DeadBand2_4) */
 663:Generated_Source\PSoC5/Sensor_Out.c ****     }
 664:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/Sensor_Out.c **** 
 666:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_UseStatus || Sensor_Out_UsingFixedFunction)
 667:Generated_Source\PSoC5/Sensor_Out.c **** 
 668:Generated_Source\PSoC5/Sensor_Out.c **** 
 669:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_SetInterruptMode
 671:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/Sensor_Out.c ****     *
 673:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 674:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/Sensor_Out.c ****     *  source status register.
 676:Generated_Source\PSoC5/Sensor_Out.c ****     *
 677:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 678:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/Sensor_Out.c ****     *
 680:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 681:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 682:Generated_Source\PSoC5/Sensor_Out.c ****     *
 683:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/Sensor_Out.c ****     {
 209              		.loc 1 685 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL4:
 686:Generated_Source\PSoC5/Sensor_Out.c ****         CY_SET_REG8(Sensor_Out_STATUS_MASK_PTR, interruptMode);
 215              		.loc 1 686 0
 216 0000 014B     		ldr	r3, .L23
 217 0002 1870     		strb	r0, [r3]
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 8D640040 		.word	1073767565
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	Sensor_Out_SetInterruptMode, .-Sensor_Out_SetInterruptMode
 226              		.section	.text.Sensor_Out_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 17


 227              		.align	2
 228              		.global	Sensor_Out_ReadStatusRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	Sensor_Out_ReadStatusRegister, %function
 232              	Sensor_Out_ReadStatusRegister:
 233              	.LFB11:
 687:Generated_Source\PSoC5/Sensor_Out.c ****     }
 688:Generated_Source\PSoC5/Sensor_Out.c **** 
 689:Generated_Source\PSoC5/Sensor_Out.c **** 
 690:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadStatusRegister
 692:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/Sensor_Out.c ****     *
 694:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 695:Generated_Source\PSoC5/Sensor_Out.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/Sensor_Out.c ****     *
 697:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 698:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 699:Generated_Source\PSoC5/Sensor_Out.c ****     *
 700:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 701:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/Sensor_Out.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/Sensor_Out.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/Sensor_Out.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/Sensor_Out.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/Sensor_Out.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/Sensor_Out.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/Sensor_Out.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/Sensor_Out.c ****     *
 710:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/Sensor_Out.c ****     {
 234              		.loc 1 712 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 713:Generated_Source\PSoC5/Sensor_Out.c ****         return (CY_GET_REG8(Sensor_Out_STATUS_PTR));
 239              		.loc 1 713 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/Sensor_Out.c ****     }
 242              		.loc 1 714 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 6D640040 		.word	1073767533
 248              		.cfi_endproc
 249              	.LFE11:
 250              		.size	Sensor_Out_ReadStatusRegister, .-Sensor_Out_ReadStatusRegister
 251              		.section	.text.Sensor_Out_ReadControlRegister,"ax",%progbits
 252              		.align	2
 253              		.global	Sensor_Out_ReadControlRegister
 254              		.thumb
 255              		.thumb_func
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 18


 256              		.type	Sensor_Out_ReadControlRegister, %function
 257              	Sensor_Out_ReadControlRegister:
 258              	.LFB12:
 715:Generated_Source\PSoC5/Sensor_Out.c **** 
 716:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* (Sensor_Out_UseStatus || Sensor_Out_UsingFixedFunction) */
 717:Generated_Source\PSoC5/Sensor_Out.c **** 
 718:Generated_Source\PSoC5/Sensor_Out.c **** 
 719:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_UseControl)
 720:Generated_Source\PSoC5/Sensor_Out.c **** 
 721:Generated_Source\PSoC5/Sensor_Out.c **** 
 722:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadControlRegister
 724:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/Sensor_Out.c ****     *
 726:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 727:Generated_Source\PSoC5/Sensor_Out.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/Sensor_Out.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/Sensor_Out.c ****     *
 730:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 731:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 732:Generated_Source\PSoC5/Sensor_Out.c ****     *
 733:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 734:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/Sensor_Out.c ****     *
 736:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/Sensor_Out.c ****     {
 259              		.loc 1 738 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 739:Generated_Source\PSoC5/Sensor_Out.c ****         uint8 result;
 740:Generated_Source\PSoC5/Sensor_Out.c **** 
 741:Generated_Source\PSoC5/Sensor_Out.c ****         result = CY_GET_REG8(Sensor_Out_CONTROL_PTR);
 264              		.loc 1 741 0
 265 0000 014B     		ldr	r3, .L29
 266 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 267              	.LVL5:
 742:Generated_Source\PSoC5/Sensor_Out.c ****         return (result);
 743:Generated_Source\PSoC5/Sensor_Out.c ****     }
 268              		.loc 1 743 0
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 7A640040 		.word	1073767546
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	Sensor_Out_ReadControlRegister, .-Sensor_Out_ReadControlRegister
 277              		.section	.text.Sensor_Out_WriteControlRegister,"ax",%progbits
 278              		.align	2
 279              		.global	Sensor_Out_WriteControlRegister
 280              		.thumb
 281              		.thumb_func
 282              		.type	Sensor_Out_WriteControlRegister, %function
 283              	Sensor_Out_WriteControlRegister:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 19


 284              	.LFB13:
 744:Generated_Source\PSoC5/Sensor_Out.c **** 
 745:Generated_Source\PSoC5/Sensor_Out.c **** 
 746:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_WriteControlRegister
 748:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/Sensor_Out.c ****     *
 750:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 751:Generated_Source\PSoC5/Sensor_Out.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/Sensor_Out.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/Sensor_Out.c ****     *
 754:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 755:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/Sensor_Out.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/Sensor_Out.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/Sensor_Out.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/Sensor_Out.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/Sensor_Out.c ****     *
 761:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 762:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 763:Generated_Source\PSoC5/Sensor_Out.c ****     *
 764:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/Sensor_Out.c ****     void Sensor_Out_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/Sensor_Out.c ****     {
 285              		.loc 1 766 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL6:
 767:Generated_Source\PSoC5/Sensor_Out.c ****         CY_SET_REG8(Sensor_Out_CONTROL_PTR, control);
 291              		.loc 1 767 0
 292 0000 014B     		ldr	r3, .L32
 293 0002 1870     		strb	r0, [r3]
 294 0004 7047     		bx	lr
 295              	.L33:
 296 0006 00BF     		.align	2
 297              	.L32:
 298 0008 7A640040 		.word	1073767546
 299              		.cfi_endproc
 300              	.LFE13:
 301              		.size	Sensor_Out_WriteControlRegister, .-Sensor_Out_WriteControlRegister
 302              		.section	.text.Sensor_Out_ReadCapture,"ax",%progbits
 303              		.align	2
 304              		.global	Sensor_Out_ReadCapture
 305              		.thumb
 306              		.thumb_func
 307              		.type	Sensor_Out_ReadCapture, %function
 308              	Sensor_Out_ReadCapture:
 309              	.LFB14:
 768:Generated_Source\PSoC5/Sensor_Out.c ****     }
 769:Generated_Source\PSoC5/Sensor_Out.c **** 
 770:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* (Sensor_Out_UseControl) */
 771:Generated_Source\PSoC5/Sensor_Out.c **** 
 772:Generated_Source\PSoC5/Sensor_Out.c **** 
 773:Generated_Source\PSoC5/Sensor_Out.c **** #if (!Sensor_Out_UsingFixedFunction)
 774:Generated_Source\PSoC5/Sensor_Out.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 20


 775:Generated_Source\PSoC5/Sensor_Out.c **** 
 776:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadCapture
 778:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/Sensor_Out.c ****     *
 780:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 781:Generated_Source\PSoC5/Sensor_Out.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/Sensor_Out.c ****     *
 783:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 784:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 785:Generated_Source\PSoC5/Sensor_Out.c ****     *
 786:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 787:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/Sensor_Out.c ****     *
 789:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadCapture(void) 
 791:Generated_Source\PSoC5/Sensor_Out.c ****     {
 310              		.loc 1 791 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 792:Generated_Source\PSoC5/Sensor_Out.c ****         return (CY_GET_REG8(Sensor_Out_CAPTURE_LSB_PTR));
 315              		.loc 1 792 0
 316 0000 014B     		ldr	r3, .L35
 317 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/Sensor_Out.c ****     }
 318              		.loc 1 793 0
 319 0004 7047     		bx	lr
 320              	.L36:
 321 0006 00BF     		.align	2
 322              	.L35:
 323 0008 5D640040 		.word	1073767517
 324              		.cfi_endproc
 325              	.LFE14:
 326              		.size	Sensor_Out_ReadCapture, .-Sensor_Out_ReadCapture
 327              		.section	.text.Sensor_Out_ClearFIFO,"ax",%progbits
 328              		.align	2
 329              		.global	Sensor_Out_ClearFIFO
 330              		.thumb
 331              		.thumb_func
 332              		.type	Sensor_Out_ClearFIFO, %function
 333              	Sensor_Out_ClearFIFO:
 334              	.LFB6:
 454:Generated_Source\PSoC5/Sensor_Out.c ****             while(0u != (Sensor_Out_ReadStatusRegister() & Sensor_Out_STATUS_FIFONEMPTY))
 335              		.loc 1 454 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/Sensor_Out.c ****             {
 343              		.loc 1 455 0
 344 0002 01E0     		b	.L38
 345              	.L39:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 21


 457:Generated_Source\PSoC5/Sensor_Out.c ****             }
 346              		.loc 1 457 0
 347 0004 FFF7FEFF 		bl	Sensor_Out_ReadCapture
 348              	.LVL7:
 349              	.L38:
 455:Generated_Source\PSoC5/Sensor_Out.c ****             {
 350              		.loc 1 455 0
 351 0008 FFF7FEFF 		bl	Sensor_Out_ReadStatusRegister
 352              	.LVL8:
 353 000c 10F0100F 		tst	r0, #16
 354 0010 F8D1     		bne	.L39
 459:Generated_Source\PSoC5/Sensor_Out.c **** 
 355              		.loc 1 459 0
 356 0012 08BD     		pop	{r3, pc}
 357              		.cfi_endproc
 358              	.LFE6:
 359              		.size	Sensor_Out_ClearFIFO, .-Sensor_Out_ClearFIFO
 360              		.section	.text.Sensor_Out_Init,"ax",%progbits
 361              		.align	2
 362              		.global	Sensor_Out_Init
 363              		.thumb
 364              		.thumb_func
 365              		.type	Sensor_Out_Init, %function
 366              	Sensor_Out_Init:
 367              	.LFB1:
  85:Generated_Source\PSoC5/Sensor_Out.c ****     #if (Sensor_Out_UsingFixedFunction || Sensor_Out_UseControl)
 368              		.loc 1 85 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 10B5     		push	{r4, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 4, -8
 375              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/Sensor_Out.c ****                 ((uint8)(~Sensor_Out_CTRL_CMPMODE1_MASK));
 376              		.loc 1 117 0
 377 0002 134A     		ldr	r2, .L43
 378 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 379 0006 03F0C003 		and	r3, r3, #192
 380              	.LVL9:
 119:Generated_Source\PSoC5/Sensor_Out.c ****                                    Sensor_Out_DEFAULT_COMPARE1_MODE;
 381              		.loc 1 119 0
 382 000a 43F00103 		orr	r3, r3, #1
 383              	.LVL10:
 384 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/Sensor_Out.c ****         #else /* (Sensor_Out_Resolution == 16)*/
 385              		.loc 1 126 0
 386 0010 104C     		ldr	r4, .L43+4
 387 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 388 0014 43F00103 		orr	r3, r3, #1
 389 0018 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (!Sensor_Out_UsingFixedFunction) */
 390              		.loc 1 133 0
 391 001a 0120     		movs	r0, #1
 392 001c FFF7FEFF 		bl	Sensor_Out_WriteCounter
 393              	.LVL11:
 136:Generated_Source\PSoC5/Sensor_Out.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 22


 394              		.loc 1 136 0
 395 0020 0120     		movs	r0, #1
 396 0022 FFF7FEFF 		bl	Sensor_Out_WritePeriod
 397              	.LVL12:
 141:Generated_Source\PSoC5/Sensor_Out.c ****             Sensor_Out_WriteCompare2(Sensor_Out_INIT_COMPARE_VALUE2);
 398              		.loc 1 141 0
 399 0026 0120     		movs	r0, #1
 400 0028 FFF7FEFF 		bl	Sensor_Out_WriteCompare1
 401              	.LVL13:
 142:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UseOneCompareMode) */
 402              		.loc 1 142 0
 403 002c 0120     		movs	r0, #1
 404 002e FFF7FEFF 		bl	Sensor_Out_WriteCompare2
 405              	.LVL14:
 154:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UseStatus || Sensor_Out_UsingFixedFunction) */
 406              		.loc 1 154 0
 407 0032 0020     		movs	r0, #0
 408 0034 FFF7FEFF 		bl	Sensor_Out_SetInterruptMode
 409              	.LVL15:
 167:Generated_Source\PSoC5/Sensor_Out.c ****             /* Use the interrupt output of the status register for IRQ output */
 410              		.loc 1 167 0
 411 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 412              	.LVL16:
 169:Generated_Source\PSoC5/Sensor_Out.c **** 
 413              		.loc 1 169 0
 414 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 415 003e 43F01003 		orr	r3, r3, #16
 416 0042 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/Sensor_Out.c **** 
 417              		.loc 1 172 0
 418 0044 FFF7FEFF 		bl	CyExitCriticalSection
 419              	.LVL17:
 176:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UseStatus) */
 420              		.loc 1 176 0
 421 0048 FFF7FEFF 		bl	Sensor_Out_ClearFIFO
 422              	.LVL18:
 423 004c 10BD     		pop	{r4, pc}
 424              	.L44:
 425 004e 00BF     		.align	2
 426              	.L43:
 427 0050 7A640040 		.word	1073767546
 428 0054 9D640040 		.word	1073767581
 429              		.cfi_endproc
 430              	.LFE1:
 431              		.size	Sensor_Out_Init, .-Sensor_Out_Init
 432              		.section	.text.Sensor_Out_Start,"ax",%progbits
 433              		.align	2
 434              		.global	Sensor_Out_Start
 435              		.thumb
 436              		.thumb_func
 437              		.type	Sensor_Out_Start, %function
 438              	Sensor_Out_Start:
 439              	.LFB0:
  56:Generated_Source\PSoC5/Sensor_Out.c ****     /* If not Initialized then initialize all required hardware and software */
 440              		.loc 1 56 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 23


 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/Sensor_Out.c ****     {
 448              		.loc 1 58 0
 449 0002 054B     		ldr	r3, .L48
 450 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 0006 23B9     		cbnz	r3, .L46
  60:Generated_Source\PSoC5/Sensor_Out.c ****         Sensor_Out_initVar = 1u;
 452              		.loc 1 60 0
 453 0008 FFF7FEFF 		bl	Sensor_Out_Init
 454              	.LVL19:
  61:Generated_Source\PSoC5/Sensor_Out.c ****     }
 455              		.loc 1 61 0
 456 000c 0122     		movs	r2, #1
 457 000e 024B     		ldr	r3, .L48
 458 0010 1A70     		strb	r2, [r3]
 459              	.L46:
  63:Generated_Source\PSoC5/Sensor_Out.c **** 
 460              		.loc 1 63 0
 461 0012 FFF7FEFF 		bl	Sensor_Out_Enable
 462              	.LVL20:
 463 0016 08BD     		pop	{r3, pc}
 464              	.L49:
 465              		.align	2
 466              	.L48:
 467 0018 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE0:
 470              		.size	Sensor_Out_Start, .-Sensor_Out_Start
 471              		.section	.text.Sensor_Out_ReadCompare1,"ax",%progbits
 472              		.align	2
 473              		.global	Sensor_Out_ReadCompare1
 474              		.thumb
 475              		.thumb_func
 476              		.type	Sensor_Out_ReadCompare1, %function
 477              	Sensor_Out_ReadCompare1:
 478              	.LFB15:
 794:Generated_Source\PSoC5/Sensor_Out.c **** 
 795:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* (!Sensor_Out_UsingFixedFunction) */
 796:Generated_Source\PSoC5/Sensor_Out.c **** 
 797:Generated_Source\PSoC5/Sensor_Out.c **** 
 798:Generated_Source\PSoC5/Sensor_Out.c **** #if (Sensor_Out_UseOneCompareMode)
 799:Generated_Source\PSoC5/Sensor_Out.c **** 
 800:Generated_Source\PSoC5/Sensor_Out.c **** 
 801:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadCompare
 803:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/Sensor_Out.c ****     *
 805:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 806:Generated_Source\PSoC5/Sensor_Out.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/Sensor_Out.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/Sensor_Out.c ****     *
 809:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 810:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 24


 811:Generated_Source\PSoC5/Sensor_Out.c ****     *
 812:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 813:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/Sensor_Out.c ****     *
 815:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadCompare(void) 
 817:Generated_Source\PSoC5/Sensor_Out.c ****     {
 818:Generated_Source\PSoC5/Sensor_Out.c ****         #if(Sensor_Out_UsingFixedFunction)
 819:Generated_Source\PSoC5/Sensor_Out.c ****             return ((uint8)CY_GET_REG16(Sensor_Out_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/Sensor_Out.c ****         #else
 821:Generated_Source\PSoC5/Sensor_Out.c ****             return (CY_GET_REG8(Sensor_Out_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/Sensor_Out.c ****         #endif /* (Sensor_Out_UsingFixedFunction) */
 823:Generated_Source\PSoC5/Sensor_Out.c ****     }
 824:Generated_Source\PSoC5/Sensor_Out.c **** 
 825:Generated_Source\PSoC5/Sensor_Out.c **** #else
 826:Generated_Source\PSoC5/Sensor_Out.c **** 
 827:Generated_Source\PSoC5/Sensor_Out.c **** 
 828:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadCompare1
 830:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/Sensor_Out.c ****     *
 832:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 833:Generated_Source\PSoC5/Sensor_Out.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/Sensor_Out.c ****     *
 835:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 836:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 837:Generated_Source\PSoC5/Sensor_Out.c ****     *
 838:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 839:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/Sensor_Out.c ****     *
 841:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadCompare1(void) 
 843:Generated_Source\PSoC5/Sensor_Out.c ****     {
 479              		.loc 1 843 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 844:Generated_Source\PSoC5/Sensor_Out.c ****         return (CY_GET_REG8(Sensor_Out_COMPARE1_LSB_PTR));
 484              		.loc 1 844 0
 485 0000 014B     		ldr	r3, .L51
 486 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:Generated_Source\PSoC5/Sensor_Out.c ****     }
 487              		.loc 1 845 0
 488 0004 7047     		bx	lr
 489              	.L52:
 490 0006 00BF     		.align	2
 491              	.L51:
 492 0008 2D640040 		.word	1073767469
 493              		.cfi_endproc
 494              	.LFE15:
 495              		.size	Sensor_Out_ReadCompare1, .-Sensor_Out_ReadCompare1
 496              		.section	.text.Sensor_Out_ReadCompare2,"ax",%progbits
 497              		.align	2
 498              		.global	Sensor_Out_ReadCompare2
 499              		.thumb
 500              		.thumb_func
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 25


 501              		.type	Sensor_Out_ReadCompare2, %function
 502              	Sensor_Out_ReadCompare2:
 503              	.LFB16:
 846:Generated_Source\PSoC5/Sensor_Out.c **** 
 847:Generated_Source\PSoC5/Sensor_Out.c **** 
 848:Generated_Source\PSoC5/Sensor_Out.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/Sensor_Out.c ****     * Function Name: Sensor_Out_ReadCompare2
 850:Generated_Source\PSoC5/Sensor_Out.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/Sensor_Out.c ****     *
 852:Generated_Source\PSoC5/Sensor_Out.c ****     * Summary:
 853:Generated_Source\PSoC5/Sensor_Out.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/Sensor_Out.c ****     *
 855:Generated_Source\PSoC5/Sensor_Out.c ****     * Parameters:
 856:Generated_Source\PSoC5/Sensor_Out.c ****     *  None
 857:Generated_Source\PSoC5/Sensor_Out.c ****     *
 858:Generated_Source\PSoC5/Sensor_Out.c ****     * Return:
 859:Generated_Source\PSoC5/Sensor_Out.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/Sensor_Out.c ****     *
 861:Generated_Source\PSoC5/Sensor_Out.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/Sensor_Out.c ****     uint8 Sensor_Out_ReadCompare2(void) 
 863:Generated_Source\PSoC5/Sensor_Out.c ****     {
 504              		.loc 1 863 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 864:Generated_Source\PSoC5/Sensor_Out.c ****         return (CY_GET_REG8(Sensor_Out_COMPARE2_LSB_PTR));
 509              		.loc 1 864 0
 510 0000 014B     		ldr	r3, .L54
 511 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:Generated_Source\PSoC5/Sensor_Out.c ****     }
 512              		.loc 1 865 0
 513 0004 7047     		bx	lr
 514              	.L55:
 515 0006 00BF     		.align	2
 516              	.L54:
 517 0008 3D640040 		.word	1073767485
 518              		.cfi_endproc
 519              	.LFE16:
 520              		.size	Sensor_Out_ReadCompare2, .-Sensor_Out_ReadCompare2
 521              		.section	.text.Sensor_Out_ReadPeriod,"ax",%progbits
 522              		.align	2
 523              		.global	Sensor_Out_ReadPeriod
 524              		.thumb
 525              		.thumb_func
 526              		.type	Sensor_Out_ReadPeriod, %function
 527              	Sensor_Out_ReadPeriod:
 528              	.LFB17:
 866:Generated_Source\PSoC5/Sensor_Out.c **** 
 867:Generated_Source\PSoC5/Sensor_Out.c **** #endif /* (Sensor_Out_UseOneCompareMode) */
 868:Generated_Source\PSoC5/Sensor_Out.c **** 
 869:Generated_Source\PSoC5/Sensor_Out.c **** 
 870:Generated_Source\PSoC5/Sensor_Out.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/Sensor_Out.c **** * Function Name: Sensor_Out_ReadPeriod
 872:Generated_Source\PSoC5/Sensor_Out.c **** ********************************************************************************
 873:Generated_Source\PSoC5/Sensor_Out.c **** *
 874:Generated_Source\PSoC5/Sensor_Out.c **** * Summary:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 26


 875:Generated_Source\PSoC5/Sensor_Out.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/Sensor_Out.c **** *
 877:Generated_Source\PSoC5/Sensor_Out.c **** * Parameters:
 878:Generated_Source\PSoC5/Sensor_Out.c **** *  None
 879:Generated_Source\PSoC5/Sensor_Out.c **** *
 880:Generated_Source\PSoC5/Sensor_Out.c **** * Return:
 881:Generated_Source\PSoC5/Sensor_Out.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/Sensor_Out.c **** *
 883:Generated_Source\PSoC5/Sensor_Out.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/Sensor_Out.c **** uint8 Sensor_Out_ReadPeriod(void) 
 885:Generated_Source\PSoC5/Sensor_Out.c **** {
 529              		.loc 1 885 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 886:Generated_Source\PSoC5/Sensor_Out.c ****     #if(Sensor_Out_UsingFixedFunction)
 887:Generated_Source\PSoC5/Sensor_Out.c ****         return ((uint8)CY_GET_REG16(Sensor_Out_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/Sensor_Out.c ****     #else
 889:Generated_Source\PSoC5/Sensor_Out.c ****         return (CY_GET_REG8(Sensor_Out_PERIOD_LSB_PTR));
 534              		.loc 1 889 0
 535 0000 014B     		ldr	r3, .L57
 536 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/Sensor_Out.c ****     #endif /* (Sensor_Out_UsingFixedFunction) */
 891:Generated_Source\PSoC5/Sensor_Out.c **** }
 537              		.loc 1 891 0
 538 0004 7047     		bx	lr
 539              	.L58:
 540 0006 00BF     		.align	2
 541              	.L57:
 542 0008 4D640040 		.word	1073767501
 543              		.cfi_endproc
 544              	.LFE17:
 545              		.size	Sensor_Out_ReadPeriod, .-Sensor_Out_ReadPeriod
 546              		.global	Sensor_Out_initVar
 547              		.bss
 548              		.set	.LANCHOR0,. + 0
 549              		.type	Sensor_Out_initVar, %object
 550              		.size	Sensor_Out_initVar, 1
 551              	Sensor_Out_initVar:
 552 0000 00       		.space	1
 553              		.text
 554              	.Letext0:
 555              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 556              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 557              		.section	.debug_info,"",%progbits
 558              	.Ldebug_info0:
 559 0000 7B030000 		.4byte	0x37b
 560 0004 0400     		.2byte	0x4
 561 0006 00000000 		.4byte	.Ldebug_abbrev0
 562 000a 04       		.byte	0x4
 563 000b 01       		.uleb128 0x1
 564 000c D8000000 		.4byte	.LASF43
 565 0010 0C       		.byte	0xc
 566 0011 D4010000 		.4byte	.LASF44
 567 0015 55020000 		.4byte	.LASF45
 568 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 27


 569 001d 00000000 		.4byte	0
 570 0021 00000000 		.4byte	.Ldebug_line0
 571 0025 02       		.uleb128 0x2
 572 0026 01       		.byte	0x1
 573 0027 06       		.byte	0x6
 574 0028 86030000 		.4byte	.LASF0
 575 002c 02       		.uleb128 0x2
 576 002d 01       		.byte	0x1
 577 002e 08       		.byte	0x8
 578 002f CA000000 		.4byte	.LASF1
 579 0033 02       		.uleb128 0x2
 580 0034 02       		.byte	0x2
 581 0035 05       		.byte	0x5
 582 0036 30030000 		.4byte	.LASF2
 583 003a 02       		.uleb128 0x2
 584 003b 02       		.byte	0x2
 585 003c 07       		.byte	0x7
 586 003d DC020000 		.4byte	.LASF3
 587 0041 02       		.uleb128 0x2
 588 0042 04       		.byte	0x4
 589 0043 05       		.byte	0x5
 590 0044 53030000 		.4byte	.LASF4
 591 0048 02       		.uleb128 0x2
 592 0049 04       		.byte	0x4
 593 004a 07       		.byte	0x7
 594 004b 83010000 		.4byte	.LASF5
 595 004f 02       		.uleb128 0x2
 596 0050 08       		.byte	0x8
 597 0051 05       		.byte	0x5
 598 0052 EF020000 		.4byte	.LASF6
 599 0056 02       		.uleb128 0x2
 600 0057 08       		.byte	0x8
 601 0058 07       		.byte	0x7
 602 0059 B3000000 		.4byte	.LASF7
 603 005d 03       		.uleb128 0x3
 604 005e 04       		.byte	0x4
 605 005f 05       		.byte	0x5
 606 0060 696E7400 		.ascii	"int\000"
 607 0064 02       		.uleb128 0x2
 608 0065 04       		.byte	0x4
 609 0066 07       		.byte	0x7
 610 0067 0F020000 		.4byte	.LASF8
 611 006b 04       		.uleb128 0x4
 612 006c 95010000 		.4byte	.LASF12
 613 0070 02       		.byte	0x2
 614 0071 E901     		.2byte	0x1e9
 615 0073 2C000000 		.4byte	0x2c
 616 0077 02       		.uleb128 0x2
 617 0078 04       		.byte	0x4
 618 0079 04       		.byte	0x4
 619 007a A5000000 		.4byte	.LASF9
 620 007e 02       		.uleb128 0x2
 621 007f 08       		.byte	0x8
 622 0080 04       		.byte	0x4
 623 0081 CD010000 		.4byte	.LASF10
 624 0085 02       		.uleb128 0x2
 625 0086 01       		.byte	0x1
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 28


 626 0087 08       		.byte	0x8
 627 0088 5C030000 		.4byte	.LASF11
 628 008c 04       		.uleb128 0x4
 629 008d 66010000 		.4byte	.LASF13
 630 0091 02       		.byte	0x2
 631 0092 9302     		.2byte	0x293
 632 0094 98000000 		.4byte	0x98
 633 0098 05       		.uleb128 0x5
 634 0099 6B000000 		.4byte	0x6b
 635 009d 02       		.uleb128 0x2
 636 009e 08       		.byte	0x8
 637 009f 04       		.byte	0x4
 638 00a0 61030000 		.4byte	.LASF14
 639 00a4 02       		.uleb128 0x2
 640 00a5 04       		.byte	0x4
 641 00a6 07       		.byte	0x7
 642 00a7 BC020000 		.4byte	.LASF15
 643 00ab 06       		.uleb128 0x6
 644 00ac 93000000 		.4byte	.LASF16
 645 00b0 01       		.byte	0x1
 646 00b1 C7       		.byte	0xc7
 647 00b2 00000000 		.4byte	.LFB2
 648 00b6 10000000 		.4byte	.LFE2-.LFB2
 649 00ba 01       		.uleb128 0x1
 650 00bb 9C       		.byte	0x9c
 651 00bc 06       		.uleb128 0x6
 652 00bd FD020000 		.4byte	.LASF17
 653 00c1 01       		.byte	0x1
 654 00c2 E9       		.byte	0xe9
 655 00c3 00000000 		.4byte	.LFB3
 656 00c7 10000000 		.4byte	.LFE3-.LFB3
 657 00cb 01       		.uleb128 0x1
 658 00cc 9C       		.byte	0x9c
 659 00cd 07       		.uleb128 0x7
 660 00ce 34000000 		.4byte	.LASF18
 661 00d2 01       		.byte	0x1
 662 00d3 9301     		.2byte	0x193
 663 00d5 00000000 		.4byte	.LFB4
 664 00d9 0C000000 		.4byte	.LFE4-.LFB4
 665 00dd 01       		.uleb128 0x1
 666 00de 9C       		.byte	0x9c
 667 00df F2000000 		.4byte	0xf2
 668 00e3 08       		.uleb128 0x8
 669 00e4 AB000000 		.4byte	.LASF20
 670 00e8 01       		.byte	0x1
 671 00e9 9301     		.2byte	0x193
 672 00eb 6B000000 		.4byte	0x6b
 673 00ef 01       		.uleb128 0x1
 674 00f0 50       		.byte	0x50
 675 00f1 00       		.byte	0
 676 00f2 09       		.uleb128 0x9
 677 00f3 C5020000 		.4byte	.LASF27
 678 00f7 01       		.byte	0x1
 679 00f8 A901     		.2byte	0x1a9
 680 00fa 6B000000 		.4byte	0x6b
 681 00fe 00000000 		.4byte	.LFB5
 682 0102 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 29


 683 0106 01       		.uleb128 0x1
 684 0107 9C       		.byte	0x9c
 685 0108 07       		.uleb128 0x7
 686 0109 1C020000 		.4byte	.LASF19
 687 010d 01       		.byte	0x1
 688 010e E201     		.2byte	0x1e2
 689 0110 00000000 		.4byte	.LFB7
 690 0114 0C000000 		.4byte	.LFE7-.LFB7
 691 0118 01       		.uleb128 0x1
 692 0119 9C       		.byte	0x9c
 693 011a 2D010000 		.4byte	0x12d
 694 011e 08       		.uleb128 0x8
 695 011f 2D000000 		.4byte	.LASF21
 696 0123 01       		.byte	0x1
 697 0124 E201     		.2byte	0x1e2
 698 0126 6B000000 		.4byte	0x6b
 699 012a 01       		.uleb128 0x1
 700 012b 50       		.byte	0x50
 701 012c 00       		.byte	0
 702 012d 07       		.uleb128 0x7
 703 012e 3A030000 		.4byte	.LASF22
 704 0132 01       		.byte	0x1
 705 0133 2B02     		.2byte	0x22b
 706 0135 00000000 		.4byte	.LFB8
 707 0139 0C000000 		.4byte	.LFE8-.LFB8
 708 013d 01       		.uleb128 0x1
 709 013e 9C       		.byte	0x9c
 710 013f 52010000 		.4byte	0x152
 711 0143 08       		.uleb128 0x8
 712 0144 92030000 		.4byte	.LASF23
 713 0148 01       		.byte	0x1
 714 0149 2B02     		.2byte	0x22b
 715 014b 6B000000 		.4byte	0x6b
 716 014f 01       		.uleb128 0x1
 717 0150 50       		.byte	0x50
 718 0151 00       		.byte	0
 719 0152 07       		.uleb128 0x7
 720 0153 6D030000 		.4byte	.LASF24
 721 0157 01       		.byte	0x1
 722 0158 4802     		.2byte	0x248
 723 015a 00000000 		.4byte	.LFB9
 724 015e 0C000000 		.4byte	.LFE9-.LFB9
 725 0162 01       		.uleb128 0x1
 726 0163 9C       		.byte	0x9c
 727 0164 77010000 		.4byte	0x177
 728 0168 08       		.uleb128 0x8
 729 0169 92030000 		.4byte	.LASF23
 730 016d 01       		.byte	0x1
 731 016e 4802     		.2byte	0x248
 732 0170 6B000000 		.4byte	0x6b
 733 0174 01       		.uleb128 0x1
 734 0175 50       		.byte	0x50
 735 0176 00       		.byte	0
 736 0177 07       		.uleb128 0x7
 737 0178 CC030000 		.4byte	.LASF25
 738 017c 01       		.byte	0x1
 739 017d AC02     		.2byte	0x2ac
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 30


 740 017f 00000000 		.4byte	.LFB10
 741 0183 0C000000 		.4byte	.LFE10-.LFB10
 742 0187 01       		.uleb128 0x1
 743 0188 9C       		.byte	0x9c
 744 0189 9C010000 		.4byte	0x19c
 745 018d 08       		.uleb128 0x8
 746 018e 0D030000 		.4byte	.LASF26
 747 0192 01       		.byte	0x1
 748 0193 AC02     		.2byte	0x2ac
 749 0195 6B000000 		.4byte	0x6b
 750 0199 01       		.uleb128 0x1
 751 019a 50       		.byte	0x50
 752 019b 00       		.byte	0
 753 019c 09       		.uleb128 0x9
 754 019d 5D000000 		.4byte	.LASF28
 755 01a1 01       		.byte	0x1
 756 01a2 C702     		.2byte	0x2c7
 757 01a4 6B000000 		.4byte	0x6b
 758 01a8 00000000 		.4byte	.LFB11
 759 01ac 0C000000 		.4byte	.LFE11-.LFB11
 760 01b0 01       		.uleb128 0x1
 761 01b1 9C       		.byte	0x9c
 762 01b2 0A       		.uleb128 0xa
 763 01b3 AD030000 		.4byte	.LASF46
 764 01b7 01       		.byte	0x1
 765 01b8 E102     		.2byte	0x2e1
 766 01ba 6B000000 		.4byte	0x6b
 767 01be 00000000 		.4byte	.LFB12
 768 01c2 0C000000 		.4byte	.LFE12-.LFB12
 769 01c6 01       		.uleb128 0x1
 770 01c7 9C       		.byte	0x9c
 771 01c8 DB010000 		.4byte	0x1db
 772 01cc 0B       		.uleb128 0xb
 773 01cd 49020000 		.4byte	.LASF34
 774 01d1 01       		.byte	0x1
 775 01d2 E302     		.2byte	0x2e3
 776 01d4 6B000000 		.4byte	0x6b
 777 01d8 01       		.uleb128 0x1
 778 01d9 50       		.byte	0x50
 779 01da 00       		.byte	0
 780 01db 07       		.uleb128 0x7
 781 01dc E8030000 		.4byte	.LASF29
 782 01e0 01       		.byte	0x1
 783 01e1 FD02     		.2byte	0x2fd
 784 01e3 00000000 		.4byte	.LFB13
 785 01e7 0C000000 		.4byte	.LFE13-.LFB13
 786 01eb 01       		.uleb128 0x1
 787 01ec 9C       		.byte	0x9c
 788 01ed 00020000 		.4byte	0x200
 789 01f1 08       		.uleb128 0x8
 790 01f2 9B010000 		.4byte	.LASF30
 791 01f6 01       		.byte	0x1
 792 01f7 FD02     		.2byte	0x2fd
 793 01f9 6B000000 		.4byte	0x6b
 794 01fd 01       		.uleb128 0x1
 795 01fe 50       		.byte	0x50
 796 01ff 00       		.byte	0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 31


 797 0200 09       		.uleb128 0x9
 798 0201 00000000 		.4byte	.LASF31
 799 0205 01       		.byte	0x1
 800 0206 1603     		.2byte	0x316
 801 0208 6B000000 		.4byte	0x6b
 802 020c 00000000 		.4byte	.LFB14
 803 0210 0C000000 		.4byte	.LFE14-.LFB14
 804 0214 01       		.uleb128 0x1
 805 0215 9C       		.byte	0x9c
 806 0216 07       		.uleb128 0x7
 807 0217 1B030000 		.4byte	.LASF32
 808 021b 01       		.byte	0x1
 809 021c C501     		.2byte	0x1c5
 810 021e 00000000 		.4byte	.LFB6
 811 0222 14000000 		.4byte	.LFE6-.LFB6
 812 0226 01       		.uleb128 0x1
 813 0227 9C       		.byte	0x9c
 814 0228 3F020000 		.4byte	0x23f
 815 022c 0C       		.uleb128 0xc
 816 022d 08000000 		.4byte	.LVL7
 817 0231 00020000 		.4byte	0x200
 818 0235 0C       		.uleb128 0xc
 819 0236 0C000000 		.4byte	.LVL8
 820 023a 9C010000 		.4byte	0x19c
 821 023e 00       		.byte	0
 822 023f 0D       		.uleb128 0xd
 823 0240 A3010000 		.4byte	.LASF33
 824 0244 01       		.byte	0x1
 825 0245 54       		.byte	0x54
 826 0246 00000000 		.4byte	.LFB1
 827 024a 58000000 		.4byte	.LFE1-.LFB1
 828 024e 01       		.uleb128 0x1
 829 024f 9C       		.byte	0x9c
 830 0250 ED020000 		.4byte	0x2ed
 831 0254 0E       		.uleb128 0xe
 832 0255 50020000 		.4byte	.LASF35
 833 0259 01       		.byte	0x1
 834 025a 57       		.byte	0x57
 835 025b 6B000000 		.4byte	0x6b
 836 025f 00000000 		.4byte	.LLST0
 837 0263 0E       		.uleb128 0xe
 838 0264 B3010000 		.4byte	.LASF36
 839 0268 01       		.byte	0x1
 840 0269 5D       		.byte	0x5d
 841 026a 6B000000 		.4byte	0x6b
 842 026e 13000000 		.4byte	.LLST1
 843 0272 0F       		.uleb128 0xf
 844 0273 20000000 		.4byte	.LVL11
 845 0277 CD000000 		.4byte	0xcd
 846 027b 85020000 		.4byte	0x285
 847 027f 10       		.uleb128 0x10
 848 0280 01       		.uleb128 0x1
 849 0281 50       		.byte	0x50
 850 0282 01       		.uleb128 0x1
 851 0283 31       		.byte	0x31
 852 0284 00       		.byte	0
 853 0285 0F       		.uleb128 0xf
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 32


 854 0286 26000000 		.4byte	.LVL12
 855 028a 08010000 		.4byte	0x108
 856 028e 98020000 		.4byte	0x298
 857 0292 10       		.uleb128 0x10
 858 0293 01       		.uleb128 0x1
 859 0294 50       		.byte	0x50
 860 0295 01       		.uleb128 0x1
 861 0296 31       		.byte	0x31
 862 0297 00       		.byte	0
 863 0298 0F       		.uleb128 0xf
 864 0299 2C000000 		.4byte	.LVL13
 865 029d 2D010000 		.4byte	0x12d
 866 02a1 AB020000 		.4byte	0x2ab
 867 02a5 10       		.uleb128 0x10
 868 02a6 01       		.uleb128 0x1
 869 02a7 50       		.byte	0x50
 870 02a8 01       		.uleb128 0x1
 871 02a9 31       		.byte	0x31
 872 02aa 00       		.byte	0
 873 02ab 0F       		.uleb128 0xf
 874 02ac 32000000 		.4byte	.LVL14
 875 02b0 52010000 		.4byte	0x152
 876 02b4 BE020000 		.4byte	0x2be
 877 02b8 10       		.uleb128 0x10
 878 02b9 01       		.uleb128 0x1
 879 02ba 50       		.byte	0x50
 880 02bb 01       		.uleb128 0x1
 881 02bc 31       		.byte	0x31
 882 02bd 00       		.byte	0
 883 02be 0F       		.uleb128 0xf
 884 02bf 38000000 		.4byte	.LVL15
 885 02c3 77010000 		.4byte	0x177
 886 02c7 D1020000 		.4byte	0x2d1
 887 02cb 10       		.uleb128 0x10
 888 02cc 01       		.uleb128 0x1
 889 02cd 50       		.byte	0x50
 890 02ce 01       		.uleb128 0x1
 891 02cf 30       		.byte	0x30
 892 02d0 00       		.byte	0
 893 02d1 0C       		.uleb128 0xc
 894 02d2 3C000000 		.4byte	.LVL16
 895 02d6 68030000 		.4byte	0x368
 896 02da 0C       		.uleb128 0xc
 897 02db 48000000 		.4byte	.LVL17
 898 02df 73030000 		.4byte	0x373
 899 02e3 0C       		.uleb128 0xc
 900 02e4 4C000000 		.4byte	.LVL18
 901 02e8 16020000 		.4byte	0x216
 902 02ec 00       		.byte	0
 903 02ed 0D       		.uleb128 0xd
 904 02ee 4C000000 		.4byte	.LASF37
 905 02f2 01       		.byte	0x1
 906 02f3 37       		.byte	0x37
 907 02f4 00000000 		.4byte	.LFB0
 908 02f8 1C000000 		.4byte	.LFE0-.LFB0
 909 02fc 01       		.uleb128 0x1
 910 02fd 9C       		.byte	0x9c
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 33


 911 02fe 15030000 		.4byte	0x315
 912 0302 0C       		.uleb128 0xc
 913 0303 0C000000 		.4byte	.LVL19
 914 0307 3F020000 		.4byte	0x23f
 915 030b 0C       		.uleb128 0xc
 916 030c 16000000 		.4byte	.LVL20
 917 0310 AB000000 		.4byte	0xab
 918 0314 00       		.byte	0
 919 0315 09       		.uleb128 0x9
 920 0316 6B010000 		.4byte	.LASF38
 921 031a 01       		.byte	0x1
 922 031b 4A03     		.2byte	0x34a
 923 031d 6B000000 		.4byte	0x6b
 924 0321 00000000 		.4byte	.LFB15
 925 0325 0C000000 		.4byte	.LFE15-.LFB15
 926 0329 01       		.uleb128 0x1
 927 032a 9C       		.byte	0x9c
 928 032b 09       		.uleb128 0x9
 929 032c 7B000000 		.4byte	.LASF39
 930 0330 01       		.byte	0x1
 931 0331 5E03     		.2byte	0x35e
 932 0333 6B000000 		.4byte	0x6b
 933 0337 00000000 		.4byte	.LFB16
 934 033b 0C000000 		.4byte	.LFE16-.LFB16
 935 033f 01       		.uleb128 0x1
 936 0340 9C       		.byte	0x9c
 937 0341 09       		.uleb128 0x9
 938 0342 17000000 		.4byte	.LASF40
 939 0346 01       		.byte	0x1
 940 0347 7403     		.2byte	0x374
 941 0349 6B000000 		.4byte	0x6b
 942 034d 00000000 		.4byte	.LFB17
 943 0351 0C000000 		.4byte	.LFE17-.LFB17
 944 0355 01       		.uleb128 0x1
 945 0356 9C       		.byte	0x9c
 946 0357 11       		.uleb128 0x11
 947 0358 9A030000 		.4byte	.LASF47
 948 035c 01       		.byte	0x1
 949 035d 20       		.byte	0x20
 950 035e 6B000000 		.4byte	0x6b
 951 0362 05       		.uleb128 0x5
 952 0363 03       		.byte	0x3
 953 0364 00000000 		.4byte	Sensor_Out_initVar
 954 0368 12       		.uleb128 0x12
 955 0369 F8010000 		.4byte	.LASF41
 956 036d F8010000 		.4byte	.LASF41
 957 0371 03       		.byte	0x3
 958 0372 7D       		.byte	0x7d
 959 0373 12       		.uleb128 0x12
 960 0374 33020000 		.4byte	.LASF42
 961 0378 33020000 		.4byte	.LASF42
 962 037c 03       		.byte	0x3
 963 037d 7E       		.byte	0x7e
 964 037e 00       		.byte	0
 965              		.section	.debug_abbrev,"",%progbits
 966              	.Ldebug_abbrev0:
 967 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 34


 968 0001 11       		.uleb128 0x11
 969 0002 01       		.byte	0x1
 970 0003 25       		.uleb128 0x25
 971 0004 0E       		.uleb128 0xe
 972 0005 13       		.uleb128 0x13
 973 0006 0B       		.uleb128 0xb
 974 0007 03       		.uleb128 0x3
 975 0008 0E       		.uleb128 0xe
 976 0009 1B       		.uleb128 0x1b
 977 000a 0E       		.uleb128 0xe
 978 000b 55       		.uleb128 0x55
 979 000c 17       		.uleb128 0x17
 980 000d 11       		.uleb128 0x11
 981 000e 01       		.uleb128 0x1
 982 000f 10       		.uleb128 0x10
 983 0010 17       		.uleb128 0x17
 984 0011 00       		.byte	0
 985 0012 00       		.byte	0
 986 0013 02       		.uleb128 0x2
 987 0014 24       		.uleb128 0x24
 988 0015 00       		.byte	0
 989 0016 0B       		.uleb128 0xb
 990 0017 0B       		.uleb128 0xb
 991 0018 3E       		.uleb128 0x3e
 992 0019 0B       		.uleb128 0xb
 993 001a 03       		.uleb128 0x3
 994 001b 0E       		.uleb128 0xe
 995 001c 00       		.byte	0
 996 001d 00       		.byte	0
 997 001e 03       		.uleb128 0x3
 998 001f 24       		.uleb128 0x24
 999 0020 00       		.byte	0
 1000 0021 0B       		.uleb128 0xb
 1001 0022 0B       		.uleb128 0xb
 1002 0023 3E       		.uleb128 0x3e
 1003 0024 0B       		.uleb128 0xb
 1004 0025 03       		.uleb128 0x3
 1005 0026 08       		.uleb128 0x8
 1006 0027 00       		.byte	0
 1007 0028 00       		.byte	0
 1008 0029 04       		.uleb128 0x4
 1009 002a 16       		.uleb128 0x16
 1010 002b 00       		.byte	0
 1011 002c 03       		.uleb128 0x3
 1012 002d 0E       		.uleb128 0xe
 1013 002e 3A       		.uleb128 0x3a
 1014 002f 0B       		.uleb128 0xb
 1015 0030 3B       		.uleb128 0x3b
 1016 0031 05       		.uleb128 0x5
 1017 0032 49       		.uleb128 0x49
 1018 0033 13       		.uleb128 0x13
 1019 0034 00       		.byte	0
 1020 0035 00       		.byte	0
 1021 0036 05       		.uleb128 0x5
 1022 0037 35       		.uleb128 0x35
 1023 0038 00       		.byte	0
 1024 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 35


 1025 003a 13       		.uleb128 0x13
 1026 003b 00       		.byte	0
 1027 003c 00       		.byte	0
 1028 003d 06       		.uleb128 0x6
 1029 003e 2E       		.uleb128 0x2e
 1030 003f 00       		.byte	0
 1031 0040 3F       		.uleb128 0x3f
 1032 0041 19       		.uleb128 0x19
 1033 0042 03       		.uleb128 0x3
 1034 0043 0E       		.uleb128 0xe
 1035 0044 3A       		.uleb128 0x3a
 1036 0045 0B       		.uleb128 0xb
 1037 0046 3B       		.uleb128 0x3b
 1038 0047 0B       		.uleb128 0xb
 1039 0048 27       		.uleb128 0x27
 1040 0049 19       		.uleb128 0x19
 1041 004a 11       		.uleb128 0x11
 1042 004b 01       		.uleb128 0x1
 1043 004c 12       		.uleb128 0x12
 1044 004d 06       		.uleb128 0x6
 1045 004e 40       		.uleb128 0x40
 1046 004f 18       		.uleb128 0x18
 1047 0050 9742     		.uleb128 0x2117
 1048 0052 19       		.uleb128 0x19
 1049 0053 00       		.byte	0
 1050 0054 00       		.byte	0
 1051 0055 07       		.uleb128 0x7
 1052 0056 2E       		.uleb128 0x2e
 1053 0057 01       		.byte	0x1
 1054 0058 3F       		.uleb128 0x3f
 1055 0059 19       		.uleb128 0x19
 1056 005a 03       		.uleb128 0x3
 1057 005b 0E       		.uleb128 0xe
 1058 005c 3A       		.uleb128 0x3a
 1059 005d 0B       		.uleb128 0xb
 1060 005e 3B       		.uleb128 0x3b
 1061 005f 05       		.uleb128 0x5
 1062 0060 27       		.uleb128 0x27
 1063 0061 19       		.uleb128 0x19
 1064 0062 11       		.uleb128 0x11
 1065 0063 01       		.uleb128 0x1
 1066 0064 12       		.uleb128 0x12
 1067 0065 06       		.uleb128 0x6
 1068 0066 40       		.uleb128 0x40
 1069 0067 18       		.uleb128 0x18
 1070 0068 9742     		.uleb128 0x2117
 1071 006a 19       		.uleb128 0x19
 1072 006b 01       		.uleb128 0x1
 1073 006c 13       		.uleb128 0x13
 1074 006d 00       		.byte	0
 1075 006e 00       		.byte	0
 1076 006f 08       		.uleb128 0x8
 1077 0070 05       		.uleb128 0x5
 1078 0071 00       		.byte	0
 1079 0072 03       		.uleb128 0x3
 1080 0073 0E       		.uleb128 0xe
 1081 0074 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 36


 1082 0075 0B       		.uleb128 0xb
 1083 0076 3B       		.uleb128 0x3b
 1084 0077 05       		.uleb128 0x5
 1085 0078 49       		.uleb128 0x49
 1086 0079 13       		.uleb128 0x13
 1087 007a 02       		.uleb128 0x2
 1088 007b 18       		.uleb128 0x18
 1089 007c 00       		.byte	0
 1090 007d 00       		.byte	0
 1091 007e 09       		.uleb128 0x9
 1092 007f 2E       		.uleb128 0x2e
 1093 0080 00       		.byte	0
 1094 0081 3F       		.uleb128 0x3f
 1095 0082 19       		.uleb128 0x19
 1096 0083 03       		.uleb128 0x3
 1097 0084 0E       		.uleb128 0xe
 1098 0085 3A       		.uleb128 0x3a
 1099 0086 0B       		.uleb128 0xb
 1100 0087 3B       		.uleb128 0x3b
 1101 0088 05       		.uleb128 0x5
 1102 0089 27       		.uleb128 0x27
 1103 008a 19       		.uleb128 0x19
 1104 008b 49       		.uleb128 0x49
 1105 008c 13       		.uleb128 0x13
 1106 008d 11       		.uleb128 0x11
 1107 008e 01       		.uleb128 0x1
 1108 008f 12       		.uleb128 0x12
 1109 0090 06       		.uleb128 0x6
 1110 0091 40       		.uleb128 0x40
 1111 0092 18       		.uleb128 0x18
 1112 0093 9742     		.uleb128 0x2117
 1113 0095 19       		.uleb128 0x19
 1114 0096 00       		.byte	0
 1115 0097 00       		.byte	0
 1116 0098 0A       		.uleb128 0xa
 1117 0099 2E       		.uleb128 0x2e
 1118 009a 01       		.byte	0x1
 1119 009b 3F       		.uleb128 0x3f
 1120 009c 19       		.uleb128 0x19
 1121 009d 03       		.uleb128 0x3
 1122 009e 0E       		.uleb128 0xe
 1123 009f 3A       		.uleb128 0x3a
 1124 00a0 0B       		.uleb128 0xb
 1125 00a1 3B       		.uleb128 0x3b
 1126 00a2 05       		.uleb128 0x5
 1127 00a3 27       		.uleb128 0x27
 1128 00a4 19       		.uleb128 0x19
 1129 00a5 49       		.uleb128 0x49
 1130 00a6 13       		.uleb128 0x13
 1131 00a7 11       		.uleb128 0x11
 1132 00a8 01       		.uleb128 0x1
 1133 00a9 12       		.uleb128 0x12
 1134 00aa 06       		.uleb128 0x6
 1135 00ab 40       		.uleb128 0x40
 1136 00ac 18       		.uleb128 0x18
 1137 00ad 9742     		.uleb128 0x2117
 1138 00af 19       		.uleb128 0x19
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 37


 1139 00b0 01       		.uleb128 0x1
 1140 00b1 13       		.uleb128 0x13
 1141 00b2 00       		.byte	0
 1142 00b3 00       		.byte	0
 1143 00b4 0B       		.uleb128 0xb
 1144 00b5 34       		.uleb128 0x34
 1145 00b6 00       		.byte	0
 1146 00b7 03       		.uleb128 0x3
 1147 00b8 0E       		.uleb128 0xe
 1148 00b9 3A       		.uleb128 0x3a
 1149 00ba 0B       		.uleb128 0xb
 1150 00bb 3B       		.uleb128 0x3b
 1151 00bc 05       		.uleb128 0x5
 1152 00bd 49       		.uleb128 0x49
 1153 00be 13       		.uleb128 0x13
 1154 00bf 02       		.uleb128 0x2
 1155 00c0 18       		.uleb128 0x18
 1156 00c1 00       		.byte	0
 1157 00c2 00       		.byte	0
 1158 00c3 0C       		.uleb128 0xc
 1159 00c4 898201   		.uleb128 0x4109
 1160 00c7 00       		.byte	0
 1161 00c8 11       		.uleb128 0x11
 1162 00c9 01       		.uleb128 0x1
 1163 00ca 31       		.uleb128 0x31
 1164 00cb 13       		.uleb128 0x13
 1165 00cc 00       		.byte	0
 1166 00cd 00       		.byte	0
 1167 00ce 0D       		.uleb128 0xd
 1168 00cf 2E       		.uleb128 0x2e
 1169 00d0 01       		.byte	0x1
 1170 00d1 3F       		.uleb128 0x3f
 1171 00d2 19       		.uleb128 0x19
 1172 00d3 03       		.uleb128 0x3
 1173 00d4 0E       		.uleb128 0xe
 1174 00d5 3A       		.uleb128 0x3a
 1175 00d6 0B       		.uleb128 0xb
 1176 00d7 3B       		.uleb128 0x3b
 1177 00d8 0B       		.uleb128 0xb
 1178 00d9 27       		.uleb128 0x27
 1179 00da 19       		.uleb128 0x19
 1180 00db 11       		.uleb128 0x11
 1181 00dc 01       		.uleb128 0x1
 1182 00dd 12       		.uleb128 0x12
 1183 00de 06       		.uleb128 0x6
 1184 00df 40       		.uleb128 0x40
 1185 00e0 18       		.uleb128 0x18
 1186 00e1 9742     		.uleb128 0x2117
 1187 00e3 19       		.uleb128 0x19
 1188 00e4 01       		.uleb128 0x1
 1189 00e5 13       		.uleb128 0x13
 1190 00e6 00       		.byte	0
 1191 00e7 00       		.byte	0
 1192 00e8 0E       		.uleb128 0xe
 1193 00e9 34       		.uleb128 0x34
 1194 00ea 00       		.byte	0
 1195 00eb 03       		.uleb128 0x3
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 38


 1196 00ec 0E       		.uleb128 0xe
 1197 00ed 3A       		.uleb128 0x3a
 1198 00ee 0B       		.uleb128 0xb
 1199 00ef 3B       		.uleb128 0x3b
 1200 00f0 0B       		.uleb128 0xb
 1201 00f1 49       		.uleb128 0x49
 1202 00f2 13       		.uleb128 0x13
 1203 00f3 02       		.uleb128 0x2
 1204 00f4 17       		.uleb128 0x17
 1205 00f5 00       		.byte	0
 1206 00f6 00       		.byte	0
 1207 00f7 0F       		.uleb128 0xf
 1208 00f8 898201   		.uleb128 0x4109
 1209 00fb 01       		.byte	0x1
 1210 00fc 11       		.uleb128 0x11
 1211 00fd 01       		.uleb128 0x1
 1212 00fe 31       		.uleb128 0x31
 1213 00ff 13       		.uleb128 0x13
 1214 0100 01       		.uleb128 0x1
 1215 0101 13       		.uleb128 0x13
 1216 0102 00       		.byte	0
 1217 0103 00       		.byte	0
 1218 0104 10       		.uleb128 0x10
 1219 0105 8A8201   		.uleb128 0x410a
 1220 0108 00       		.byte	0
 1221 0109 02       		.uleb128 0x2
 1222 010a 18       		.uleb128 0x18
 1223 010b 9142     		.uleb128 0x2111
 1224 010d 18       		.uleb128 0x18
 1225 010e 00       		.byte	0
 1226 010f 00       		.byte	0
 1227 0110 11       		.uleb128 0x11
 1228 0111 34       		.uleb128 0x34
 1229 0112 00       		.byte	0
 1230 0113 03       		.uleb128 0x3
 1231 0114 0E       		.uleb128 0xe
 1232 0115 3A       		.uleb128 0x3a
 1233 0116 0B       		.uleb128 0xb
 1234 0117 3B       		.uleb128 0x3b
 1235 0118 0B       		.uleb128 0xb
 1236 0119 49       		.uleb128 0x49
 1237 011a 13       		.uleb128 0x13
 1238 011b 3F       		.uleb128 0x3f
 1239 011c 19       		.uleb128 0x19
 1240 011d 02       		.uleb128 0x2
 1241 011e 18       		.uleb128 0x18
 1242 011f 00       		.byte	0
 1243 0120 00       		.byte	0
 1244 0121 12       		.uleb128 0x12
 1245 0122 2E       		.uleb128 0x2e
 1246 0123 00       		.byte	0
 1247 0124 3F       		.uleb128 0x3f
 1248 0125 19       		.uleb128 0x19
 1249 0126 3C       		.uleb128 0x3c
 1250 0127 19       		.uleb128 0x19
 1251 0128 6E       		.uleb128 0x6e
 1252 0129 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 39


 1253 012a 03       		.uleb128 0x3
 1254 012b 0E       		.uleb128 0xe
 1255 012c 3A       		.uleb128 0x3a
 1256 012d 0B       		.uleb128 0xb
 1257 012e 3B       		.uleb128 0x3b
 1258 012f 0B       		.uleb128 0xb
 1259 0130 00       		.byte	0
 1260 0131 00       		.byte	0
 1261 0132 00       		.byte	0
 1262              		.section	.debug_loc,"",%progbits
 1263              	.Ldebug_loc0:
 1264              	.LLST0:
 1265 0000 0A000000 		.4byte	.LVL9
 1266 0004 0E000000 		.4byte	.LVL10
 1267 0008 0100     		.2byte	0x1
 1268 000a 53       		.byte	0x53
 1269 000b 00000000 		.4byte	0
 1270 000f 00000000 		.4byte	0
 1271              	.LLST1:
 1272 0013 3C000000 		.4byte	.LVL16
 1273 0017 47000000 		.4byte	.LVL17-1
 1274 001b 0100     		.2byte	0x1
 1275 001d 50       		.byte	0x50
 1276 001e 00000000 		.4byte	0
 1277 0022 00000000 		.4byte	0
 1278              		.section	.debug_aranges,"",%progbits
 1279 0000 A4000000 		.4byte	0xa4
 1280 0004 0200     		.2byte	0x2
 1281 0006 00000000 		.4byte	.Ldebug_info0
 1282 000a 04       		.byte	0x4
 1283 000b 00       		.byte	0
 1284 000c 0000     		.2byte	0
 1285 000e 0000     		.2byte	0
 1286 0010 00000000 		.4byte	.LFB2
 1287 0014 10000000 		.4byte	.LFE2-.LFB2
 1288 0018 00000000 		.4byte	.LFB3
 1289 001c 10000000 		.4byte	.LFE3-.LFB3
 1290 0020 00000000 		.4byte	.LFB4
 1291 0024 0C000000 		.4byte	.LFE4-.LFB4
 1292 0028 00000000 		.4byte	.LFB5
 1293 002c 14000000 		.4byte	.LFE5-.LFB5
 1294 0030 00000000 		.4byte	.LFB7
 1295 0034 0C000000 		.4byte	.LFE7-.LFB7
 1296 0038 00000000 		.4byte	.LFB8
 1297 003c 0C000000 		.4byte	.LFE8-.LFB8
 1298 0040 00000000 		.4byte	.LFB9
 1299 0044 0C000000 		.4byte	.LFE9-.LFB9
 1300 0048 00000000 		.4byte	.LFB10
 1301 004c 0C000000 		.4byte	.LFE10-.LFB10
 1302 0050 00000000 		.4byte	.LFB11
 1303 0054 0C000000 		.4byte	.LFE11-.LFB11
 1304 0058 00000000 		.4byte	.LFB12
 1305 005c 0C000000 		.4byte	.LFE12-.LFB12
 1306 0060 00000000 		.4byte	.LFB13
 1307 0064 0C000000 		.4byte	.LFE13-.LFB13
 1308 0068 00000000 		.4byte	.LFB14
 1309 006c 0C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 40


 1310 0070 00000000 		.4byte	.LFB6
 1311 0074 14000000 		.4byte	.LFE6-.LFB6
 1312 0078 00000000 		.4byte	.LFB1
 1313 007c 58000000 		.4byte	.LFE1-.LFB1
 1314 0080 00000000 		.4byte	.LFB0
 1315 0084 1C000000 		.4byte	.LFE0-.LFB0
 1316 0088 00000000 		.4byte	.LFB15
 1317 008c 0C000000 		.4byte	.LFE15-.LFB15
 1318 0090 00000000 		.4byte	.LFB16
 1319 0094 0C000000 		.4byte	.LFE16-.LFB16
 1320 0098 00000000 		.4byte	.LFB17
 1321 009c 0C000000 		.4byte	.LFE17-.LFB17
 1322 00a0 00000000 		.4byte	0
 1323 00a4 00000000 		.4byte	0
 1324              		.section	.debug_ranges,"",%progbits
 1325              	.Ldebug_ranges0:
 1326 0000 00000000 		.4byte	.LFB2
 1327 0004 10000000 		.4byte	.LFE2
 1328 0008 00000000 		.4byte	.LFB3
 1329 000c 10000000 		.4byte	.LFE3
 1330 0010 00000000 		.4byte	.LFB4
 1331 0014 0C000000 		.4byte	.LFE4
 1332 0018 00000000 		.4byte	.LFB5
 1333 001c 14000000 		.4byte	.LFE5
 1334 0020 00000000 		.4byte	.LFB7
 1335 0024 0C000000 		.4byte	.LFE7
 1336 0028 00000000 		.4byte	.LFB8
 1337 002c 0C000000 		.4byte	.LFE8
 1338 0030 00000000 		.4byte	.LFB9
 1339 0034 0C000000 		.4byte	.LFE9
 1340 0038 00000000 		.4byte	.LFB10
 1341 003c 0C000000 		.4byte	.LFE10
 1342 0040 00000000 		.4byte	.LFB11
 1343 0044 0C000000 		.4byte	.LFE11
 1344 0048 00000000 		.4byte	.LFB12
 1345 004c 0C000000 		.4byte	.LFE12
 1346 0050 00000000 		.4byte	.LFB13
 1347 0054 0C000000 		.4byte	.LFE13
 1348 0058 00000000 		.4byte	.LFB14
 1349 005c 0C000000 		.4byte	.LFE14
 1350 0060 00000000 		.4byte	.LFB6
 1351 0064 14000000 		.4byte	.LFE6
 1352 0068 00000000 		.4byte	.LFB1
 1353 006c 58000000 		.4byte	.LFE1
 1354 0070 00000000 		.4byte	.LFB0
 1355 0074 1C000000 		.4byte	.LFE0
 1356 0078 00000000 		.4byte	.LFB15
 1357 007c 0C000000 		.4byte	.LFE15
 1358 0080 00000000 		.4byte	.LFB16
 1359 0084 0C000000 		.4byte	.LFE16
 1360 0088 00000000 		.4byte	.LFB17
 1361 008c 0C000000 		.4byte	.LFE17
 1362 0090 00000000 		.4byte	0
 1363 0094 00000000 		.4byte	0
 1364              		.section	.debug_line,"",%progbits
 1365              	.Ldebug_line0:
 1366 0000 AA010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 41


 1366      02005200 
 1366      00000201 
 1366      FB0E0D00 
 1366      01010101 
 1367              	.LASF31:
 1368 0000 53656E73 		.ascii	"Sensor_Out_ReadCapture\000"
 1368      6F725F4F 
 1368      75745F52 
 1368      65616443 
 1368      61707475 
 1369              	.LASF40:
 1370 0017 53656E73 		.ascii	"Sensor_Out_ReadPeriod\000"
 1370      6F725F4F 
 1370      75745F52 
 1370      65616450 
 1370      6572696F 
 1371              	.LASF21:
 1372 002d 70657269 		.ascii	"period\000"
 1372      6F6400
 1373              	.LASF18:
 1374 0034 53656E73 		.ascii	"Sensor_Out_WriteCounter\000"
 1374      6F725F4F 
 1374      75745F57 
 1374      72697465 
 1374      436F756E 
 1375              	.LASF37:
 1376 004c 53656E73 		.ascii	"Sensor_Out_Start\000"
 1376      6F725F4F 
 1376      75745F53 
 1376      74617274 
 1376      00
 1377              	.LASF28:
 1378 005d 53656E73 		.ascii	"Sensor_Out_ReadStatusRegister\000"
 1378      6F725F4F 
 1378      75745F52 
 1378      65616453 
 1378      74617475 
 1379              	.LASF39:
 1380 007b 53656E73 		.ascii	"Sensor_Out_ReadCompare2\000"
 1380      6F725F4F 
 1380      75745F52 
 1380      65616443 
 1380      6F6D7061 
 1381              	.LASF16:
 1382 0093 53656E73 		.ascii	"Sensor_Out_Enable\000"
 1382      6F725F4F 
 1382      75745F45 
 1382      6E61626C 
 1382      6500
 1383              	.LASF9:
 1384 00a5 666C6F61 		.ascii	"float\000"
 1384      7400
 1385              	.LASF20:
 1386 00ab 636F756E 		.ascii	"counter\000"
 1386      74657200 
 1387              	.LASF7:
 1388 00b3 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 42


 1388      206C6F6E 
 1388      6720756E 
 1388      7369676E 
 1388      65642069 
 1389              	.LASF1:
 1390 00ca 756E7369 		.ascii	"unsigned char\000"
 1390      676E6564 
 1390      20636861 
 1390      7200
 1391              	.LASF43:
 1392 00d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1392      43313120 
 1392      352E342E 
 1392      31203230 
 1392      31363036 
 1393 010b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1393      20726576 
 1393      6973696F 
 1393      6E203233 
 1393      37373135 
 1394 013e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1394      66756E63 
 1394      74696F6E 
 1394      2D736563 
 1394      74696F6E 
 1395              	.LASF13:
 1396 0166 72656738 		.ascii	"reg8\000"
 1396      00
 1397              	.LASF38:
 1398 016b 53656E73 		.ascii	"Sensor_Out_ReadCompare1\000"
 1398      6F725F4F 
 1398      75745F52 
 1398      65616443 
 1398      6F6D7061 
 1399              	.LASF5:
 1400 0183 6C6F6E67 		.ascii	"long unsigned int\000"
 1400      20756E73 
 1400      69676E65 
 1400      6420696E 
 1400      7400
 1401              	.LASF12:
 1402 0195 75696E74 		.ascii	"uint8\000"
 1402      3800
 1403              	.LASF30:
 1404 019b 636F6E74 		.ascii	"control\000"
 1404      726F6C00 
 1405              	.LASF33:
 1406 01a3 53656E73 		.ascii	"Sensor_Out_Init\000"
 1406      6F725F4F 
 1406      75745F49 
 1406      6E697400 
 1407              	.LASF36:
 1408 01b3 53656E73 		.ascii	"Sensor_Out_interruptState\000"
 1408      6F725F4F 
 1408      75745F69 
 1408      6E746572 
 1408      72757074 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 43


 1409              	.LASF10:
 1410 01cd 646F7562 		.ascii	"double\000"
 1410      6C6500
 1411              	.LASF44:
 1412 01d4 47656E65 		.ascii	"Generated_Source\\PSoC5\\Sensor_Out.c\000"
 1412      72617465 
 1412      645F536F 
 1412      75726365 
 1412      5C50536F 
 1413              	.LASF41:
 1414 01f8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1414      74657243 
 1414      72697469 
 1414      63616C53 
 1414      65637469 
 1415              	.LASF8:
 1416 020f 756E7369 		.ascii	"unsigned int\000"
 1416      676E6564 
 1416      20696E74 
 1416      00
 1417              	.LASF19:
 1418 021c 53656E73 		.ascii	"Sensor_Out_WritePeriod\000"
 1418      6F725F4F 
 1418      75745F57 
 1418      72697465 
 1418      50657269 
 1419              	.LASF42:
 1420 0233 43794578 		.ascii	"CyExitCriticalSection\000"
 1420      69744372 
 1420      69746963 
 1420      616C5365 
 1420      6374696F 
 1421              	.LASF34:
 1422 0249 72657375 		.ascii	"result\000"
 1422      6C7400
 1423              	.LASF35:
 1424 0250 6374726C 		.ascii	"ctrl\000"
 1424      00
 1425              	.LASF45:
 1426 0255 433A5C55 		.ascii	"C:\\Users\\Jacob\\OneDrive - Aarhus universitet\\4."
 1426      73657273 
 1426      5C4A6163 
 1426      6F625C4F 
 1426      6E654472 
 1427 0284 2053656D 		.ascii	" Semester\\PRJ4\\E4PRJ\\PSoC\\Dron-A Lisa\\Dron-A L"
 1427      65737465 
 1427      725C5052 
 1427      4A345C45 
 1427      3450524A 
 1428 02b2 6973612E 		.ascii	"isa.cydsn\000"
 1428      63796473 
 1428      6E00
 1429              	.LASF15:
 1430 02bc 73697A65 		.ascii	"sizetype\000"
 1430      74797065 
 1430      00
 1431              	.LASF27:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 44


 1432 02c5 53656E73 		.ascii	"Sensor_Out_ReadCounter\000"
 1432      6F725F4F 
 1432      75745F52 
 1432      65616443 
 1432      6F756E74 
 1433              	.LASF3:
 1434 02dc 73686F72 		.ascii	"short unsigned int\000"
 1434      7420756E 
 1434      7369676E 
 1434      65642069 
 1434      6E7400
 1435              	.LASF6:
 1436 02ef 6C6F6E67 		.ascii	"long long int\000"
 1436      206C6F6E 
 1436      6720696E 
 1436      7400
 1437              	.LASF17:
 1438 02fd 53656E73 		.ascii	"Sensor_Out_Stop\000"
 1438      6F725F4F 
 1438      75745F53 
 1438      746F7000 
 1439              	.LASF26:
 1440 030d 696E7465 		.ascii	"interruptMode\000"
 1440      72727570 
 1440      744D6F64 
 1440      6500
 1441              	.LASF32:
 1442 031b 53656E73 		.ascii	"Sensor_Out_ClearFIFO\000"
 1442      6F725F4F 
 1442      75745F43 
 1442      6C656172 
 1442      4649464F 
 1443              	.LASF2:
 1444 0330 73686F72 		.ascii	"short int\000"
 1444      7420696E 
 1444      7400
 1445              	.LASF22:
 1446 033a 53656E73 		.ascii	"Sensor_Out_WriteCompare1\000"
 1446      6F725F4F 
 1446      75745F57 
 1446      72697465 
 1446      436F6D70 
 1447              	.LASF4:
 1448 0353 6C6F6E67 		.ascii	"long int\000"
 1448      20696E74 
 1448      00
 1449              	.LASF11:
 1450 035c 63686172 		.ascii	"char\000"
 1450      00
 1451              	.LASF14:
 1452 0361 6C6F6E67 		.ascii	"long double\000"
 1452      20646F75 
 1452      626C6500 
 1453              	.LASF24:
 1454 036d 53656E73 		.ascii	"Sensor_Out_WriteCompare2\000"
 1454      6F725F4F 
 1454      75745F57 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccsB4VNw.s 			page 45


 1454      72697465 
 1454      436F6D70 
 1455              	.LASF0:
 1456 0386 7369676E 		.ascii	"signed char\000"
 1456      65642063 
 1456      68617200 
 1457              	.LASF23:
 1458 0392 636F6D70 		.ascii	"compare\000"
 1458      61726500 
 1459              	.LASF47:
 1460 039a 53656E73 		.ascii	"Sensor_Out_initVar\000"
 1460      6F725F4F 
 1460      75745F69 
 1460      6E697456 
 1460      617200
 1461              	.LASF46:
 1462 03ad 53656E73 		.ascii	"Sensor_Out_ReadControlRegister\000"
 1462      6F725F4F 
 1462      75745F52 
 1462      65616443 
 1462      6F6E7472 
 1463              	.LASF25:
 1464 03cc 53656E73 		.ascii	"Sensor_Out_SetInterruptMode\000"
 1464      6F725F4F 
 1464      75745F53 
 1464      6574496E 
 1464      74657272 
 1465              	.LASF29:
 1466 03e8 53656E73 		.ascii	"Sensor_Out_WriteControlRegister\000"
 1466      6F725F4F 
 1466      75745F57 
 1466      72697465 
 1466      436F6E74 
 1467              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
